{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4989305e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns \n",
    "import sklearn\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "77b0f711",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv(r\"C:\\Users\\ELCOT\\Downloads\\dataset\\abalone.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "81130456",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Height</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Shucked weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M</td>\n",
       "      <td>0.455</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.5140</td>\n",
       "      <td>0.2245</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.150</td>\n",
       "      <td>16.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.265</td>\n",
       "      <td>0.090</td>\n",
       "      <td>0.2255</td>\n",
       "      <td>0.0995</td>\n",
       "      <td>0.0485</td>\n",
       "      <td>0.070</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.135</td>\n",
       "      <td>0.6770</td>\n",
       "      <td>0.2565</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.210</td>\n",
       "      <td>10.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.5160</td>\n",
       "      <td>0.2155</td>\n",
       "      <td>0.1140</td>\n",
       "      <td>0.155</td>\n",
       "      <td>11.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>I</td>\n",
       "      <td>0.330</td>\n",
       "      <td>0.255</td>\n",
       "      <td>0.080</td>\n",
       "      <td>0.2050</td>\n",
       "      <td>0.0895</td>\n",
       "      <td>0.0395</td>\n",
       "      <td>0.055</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Sex  Length  Diameter  Height  Whole weight  Shucked weight  Viscera weight  \\\n",
       "0   M   0.455     0.365   0.095        0.5140          0.2245          0.1010   \n",
       "1   M   0.350     0.265   0.090        0.2255          0.0995          0.0485   \n",
       "2   F   0.530     0.420   0.135        0.6770          0.2565          0.1415   \n",
       "3   M   0.440     0.365   0.125        0.5160          0.2155          0.1140   \n",
       "4   I   0.330     0.255   0.080        0.2050          0.0895          0.0395   \n",
       "\n",
       "   Shell weight   Age  \n",
       "0         0.150  16.5  \n",
       "1         0.070   8.5  \n",
       "2         0.210  10.5  \n",
       "3         0.155  11.5  \n",
       "4         0.055   8.5  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e24d366",
   "metadata": {},
   "source": [
    "## Univariate analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1658f65e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Age', ylabel='Density'>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(data['Age'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "324ba8a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1d8ff0383a0>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(data.Length)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ed703c4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1d8844aaf40>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(data.Diameter)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11960dd8",
   "metadata": {},
   "source": [
    "## Bivariate analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7fc957a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Diameter', ylabel='Age'>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX4AAAEGCAYAAABiq/5QAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAABH0ElEQVR4nO3dd3ydZ33//9d17rOX9rJsS97bjh2TSUjIgCS0QIBQRlmlpVCgpaUUSn/f9ktbvkDLKmW3hVIaVhmBJpBBJoEs2zjee8my9jh73OP6/XEfHUuWZMlOZMk+n+fjoYelc450rtuy3+c61/hcSmuNEEKIyuGZ7QYIIYS4sCT4hRCiwkjwCyFEhZHgF0KICiPBL4QQFcY72w2Yjvr6et3e3j7bzRBCiIvK1q1b+7XWDWfeflEEf3t7O1u2bJntZgghxEVFKXV8ottlqEcIISrMjAW/UmqBUuoRpdRepdRupdSflW7/v0qpTqXU9tLH7TPVBiGEEOPN5FCPBXxQa71NKRUDtiqlHizd9zmt9adn8LmFEEJMYsaCX2vdBXSVPk8ppfYCrTP1fEIIIabngozxK6XagY3A06Wb3qeU2qGU+oZSqmaS73mXUmqLUmpLX1/fhWimEEJUhBkPfqVUFPgR8AGtdRL4CrAEuAz3HcFnJvo+rfXXtdabtdabGxrGrUYSQghxnmY0+JVSPtzQv0tr/WMArXWP1trWWjvAvwFXzGQbhBBCjDWTq3oU8B/AXq31Z0fd3jLqYXcAu2aqDUIIIcabyVU91wJvAXYqpbaXbvso8Eal1GWABo4BfzyDbRBCiDmnJ5mnKR6cteefyVU9TwBqgrt+PlPPKYQQF4PeZGFWg1927gohRIWR4BdCiAojwS+EEBVGgl8IISqMBL8QQlQYCX4hhKgwEvxCCFFhJPiFEKLCSPALIUSFkeAXQogKI8EvhBAVRoJfCCEqjAS/EEJUGAl+IYSoMBL8QghRYST4hRCiwkjwCyFEhZHgF0KICiPBL4QQFUaCXwghKowEvxBCVBgJfiGEqDAS/EIIUWEk+IUQosJI8AshRIWR4BdCiAojwS+EEBVGgl8IISqMBL8QQlQYCX4hhKgwEvxCCFFhJPiFEKLCSPALIUSFkeAXQogKI8EvhBAVRoJfCCEqzIwFv1JqgVLqEaXUXqXUbqXUn5Vur1VKPaiUOlj6s2am2iCEEGK8mezxW8AHtdargKuA9yqlVgMfAR7SWi8DHip9LYQQ4gKZseDXWndprbeVPk8Be4FW4FXAt0oP+xbw6plqgxBCiPEuyBi/Uqod2Ag8DTRprbvAfXEAGif5nncppbYopbb09fVdiGYKIURFmPHgV0pFgR8BH9BaJ6f7fVrrr2utN2utNzc0NMxcA4UQosLMaPArpXy4oX+X1vrHpZt7lFItpftbgN6ZbIMQQoixZnJVjwL+A9irtf7sqLt+Bryt9PnbgJ/OVBuEEOJ8aK3Jm/ZsN2PGzGSP/1rgLcCNSqntpY/bgU8CtyilDgK3lL4WQog5I1O0OdKXnu1mzBjvTP1grfUTgJrk7ptm6nmFEOL5Mi2HRM5Ea407eHFpkZ27QghxBtNxyBRtCpYz202ZERL8QghxhnzRpmhJ8AshRMXImQ6OhoJ1aU7wSvALIcQZcqZFyGuQzluz3ZQZIcEvhBBnyBVtwn4vKQl+IYS49GmtKdoOQZ+HTEGCXwghLnmmrdEavIaHou1g2ZfeBK8EvxBCjGLaTnkDkoJLcmWPBL8QQoxi2br8uUaCXwghLnlF22Ek+j0ocsVLb5xfgl8IIUYpWDaeUpkGn9dzSa7skeAXQohRckUbr8cNfr/hIV1a2ZMr2hwfyMxm014wEvxCCDFKzrTxetxo9BmKTNGiYNns7kxI8AshxKUoX7TxGm6PXykFWrG3K0nOtHE0OI6e4ifMfRL8QggxSt46PdQD4OAwlDGpDvsBt3LnxW7G6vELIcTFxrTd4myja/DXhgPlyV4F2NLjF0KIS4dl63GnR3lGvQhowJLgF0KIS0dxGuUZbFuCXwghLhnWqM1bkz5GevxCCHHpKFoOatKjwt2dvOYlUMJBgl8IIUqypjVmRc+ZPB5F/hI4lUuCXwghSvJFp7yGfyKGR1F8nj3+Y/0ZvvfsCcxZLPcswS+EuCQNZYqk8uY5fU+qYOEzJo9FQ6nnXa3z3p1d3PX0Cf7P3bvQenbmCyT4hRCXpP50geHs9IPfdjR50z5r8HsN9bx76sPZIgDfe7aDrz9+5Hn9rPMlwS+EuCRlihbJ3PSDv2DZZ5nWdXlegB5/ImdSE/bxO+tb+OR9+7hvV9fz+nnnQ4JfCHFJyhRsUudwZm7enHopp+Fxe/zPZ4gmmbOIBn18+s4NXLagmg98fzvPdQyf9887HxL8QohLju1oTNshb9rTLrGQKVhjdumezfNZy5/ImUQDXoI+g39762bqowHe+a0tdA7nzvtnnisJfiHEJcddj+8qTHP5Zapg4j/L+P4IxdjjGc+VG/wGAPXRAN98+4soWDZ/8M1nz3ky+nxJ8AshLjmjl1zmzemNySdzFn7v1JHo1us5/3H+RM4kEjhdH3NZU4yvvPlyDvWled93fot1AZZ5SvALIS45BdtGM/0zc89c0WPZDv3pwoSPfb4VOpOloZ7RXrysnn989VoeO9DHx/53z4wv85TgF0JcdPKmzdH+NId60xPe7x6f6Jn2mblnDgfds6OL99y1lVxxomEidd5j/LajSRWsccEP8MYrFvLHL1nMt586zjd+fey8fv50ST1+IcRFpWMww+G+DB6lcLRmYW143BBNpmjhMxQ+wzOtJZ1nDgft6BwmbzocH8iwsiU+7vHnOxwzMoY/UfADfPjWlRwbyPCP9+6hrTbMzaubzut5piI9fiHERaVzOE886KMm7Efr0xuiRssW3B6/16PImc6UxyVmChae0nSw1pr93SkAjk5wxq7hUdOeNzhTInf24Pd4FJ//vY2sa63iT7/3W3Z1Js7reaYiwS+EuGicORYf9ht0JcYug9Raky1aeA1VOklLT7npKlUwy+8aupN5kqXhoaP9p4N/KFvkv586Dnriuv1PHOznZ8+dOuvzlIM/OPlgS8hv8O9v3Ux1yMc7v/XsuOt7IUjwCyEuGqOXaQKEfAaDGZO8eXos3rS1O7E7ak3+6Psnkhq1omektx8Pejk2kC0/5pd7evj+lg46hjITvpB84aGDfPLne8/6PCPBH/GffZS9MR7kP97+IgCOj2rDC2XGgl8p9Q2lVK9Sateo2/6vUqpTKbW99HH7TD2/EOLSc+YkrFIKpcYO9xRth9GLYpRSk0zSumxHkxv1LmJ/T4qgz8O1S+s51p/BKf2wXafcYZfBbJHiGUM9Wmv296Q4lcif9UVmqqGe0Va1xHnsQy/lqsV1Uz72XM1kj/8/gVsnuP1zWuvLSh8/n8HnF0JcYorW+LIKEb+XzuH8mMeM5vN4SE+wpPPkUJaTQ1n6UoUx7yL2d6dY1hhjcX2UnGnTmypgO5q9Xe47gYG0SdEeG+69qUI51E8MTt5DT+bcdpxtqGe0oM+Y1uPO1YwFv9b6cWBwpn6+EKLyJPMmPs/Y2Ar6DJI5s9yrL1r2mFO0/N7xK3sKls3B3jRH+jLs607iLfX2C5bNkf4MK5piLKqPAO44/+G+NLlST74/nR9Xr2dkeAjcevuTOZce/0yajTH+9ymldpSGgmpm4fmFEBepTGHissk+Q3GstAInXXBP0fqvJ4/xv8+dwmcoMkVrTDnlZM4CDTVhP3WRAPGgD4AjfRlsR7O8OUZbXRiFG+S7S8M8VSEffakijh67ietAz+ngP9uYfCJn4jMUgWnsEJ5JF/rZvwIsAS4DuoDPTPZApdS7lFJblFJb+vr6LlDzhBBzWbowcVmFeNDHqUSO4WyRTMFGKfjpc6f43x2nUEqhtXswy4ieZJ7QBMMo+0sBvqIpRtBn0FIV5Gh/hl2dSeZVBVnSEC0NDY3dxHWgJ0V91E9N2DfhEtARiZxJVchXWm00ey5o8Gute7TWttbaAf4NuOIsj/261nqz1npzQ0PDhWukEGJOsmwH03YwJjgTVylFzO9jf3eKTMHi5FCWouXQlcjTlyoQ8Xs5MeT2xE3bYSBTIOyfIPi7UzTGAtRG/AAsqo9wpD/N7q4Ea1qraIgF6E3l0egxwb+/J83yphhtdRGOnyX4kzmz/O5iNl3Q4FdKtYz68g5g12SPFUKI0Yq2c9aDUkJ+g2zRJm/ZHOg5Xcph16kEQZ9BKmeRKVik8hZaM67XPbIyZ3lTrHxbe32EnmSBTMFm7bwqGmMBknmLomljlyp0Oo7mYOn7FtVHONZ/lsndvEk8dAkHv1Lqu8CTwAql1Eml1DuBf1JK7VRK7QBeCvz5TD2/EOLSUigtocwWLbYdH+Kup4/zX08eKy+3BHfM3ufxsLcrSX00QDTgZedJd3zeayh6U3n6UvkJyy/fs6OLvlSByxZUl28bmeAFWDsvTmMsAEB/pkgybzKQLrCvO0W2aJd6/GFOJXKTLukcGeqZbTM2tay1fuMEN//HTD2fEOLSVrBsCpbNe7/zW9KjTtZaWBvmhhWNgFtOoSrkY293irXzqijaNjtLZQ9iAR+dQ+4u2GhgbPjuODnMvz9xhCvaa7llVH2c9jo3+BtjARrjQfpKFTtTeYsjfe67iu2l07NWNEeJBAy0ho7BLMtGvXMYkciZ5Z85m2TnrhBiTnIczZ5TyXLvOZW3ODmUJ12w+MMXL+J7f3QVSxuifOvJY2N62L2pAoOZIqtbYqxrraI7mac3lcfwuBOypq3HzBP0JPN88r59zKsO8cGXLR+z47cxFiAe9LJ+fhUADaUefzJnURsJUBsJ0FF6MVna6I7xA2N2/I42V3r8EvxCiDnBPKP+TX+6wLGBDCdLk7KZolWeOH3J8gYiAS9/eN0i+tNFfvLbzvL37e1KAu7O13WtbmCPFDuLB33jJle//OhhbEfz/92+mvAZpRSUUnzyNet5xzWLAKiLBPAoyj1/gM6hLC1VQapCPhaVgn+iCV7H0e7kbmj2iyJPGfxKqSal1H8opX5R+np1abxeCCFeEEXLYevxofIGJ9vRHOpL0xAN0DGYI1u0SOctjvRnqI8GqAm7q27WzKvi2qX1/GjbyfLBKXu6koR8Bm11EdrqIsQC3vJwj8/wjFkOurMzwbYTQ/ze5gW01oQmbNuC2nB5QtbwKOqj7sqeEZ3D+fKEcFXYR3XYN6a424hM0cLRXDQ9/v8E7gfmlb4+AHxghtojhKhAybxJMmeyqzNB3rTpTeYpWg5Bn4HP8HCkL4PlaA71plnWGB3zvW+/ph1Ha/7p/v1kChZ7u5KsaI5heBQepVjbWlUO/tG01vzXk8eojfh5xfqWcfdPpiEWoC/lvsjYjuZUIsfyptNtcpd0jh/qGXlRu1iCv15r/QPAAdBaW8D0Ti8WQlSMRNbkaP/EJ2JNpTeVJ1YagtnXneJwf7o8JBMPeulLFUgXLLoSeZY1jQ3+5niQD96yggM9KT56906OD2RZPerwlLWtVfQkC3Qn8mO+79ljg+zrTvHGFy0k4J1+TZzRwX8qkcOy9ZgloIvqwhP2+C+24M8opepwzxhGKXUVMDOnAwghLlp96TyH+zJTlkA+k+1oBtJFwn6DeNBHImvi2JRLMyilCPsNOkq96OWN41fLXLu0nr+5fRUdg1k07vj+iCsW1eIzFF97/HC5vo5lO3z7qeO0VAW5eVXjObW3MRakP+0WbnvqyAAAmxZWl+9vq4twKpEbV0l0JPgvlnX8fwH8DFiilPo18F/A+2e0VUKIKVm2w2Bm/OlTs6UvVcCjKC+ZnK503sJ2dHk1TW3ET03ETzpv8f9+vpcTg1nCfi+dpR77kjOGeka8qL2Wj/3uGm5Z3TSmx98cD/L2axax5fgQP9/VTdFy+OR9+zg2kOVtV7eXC7RNV0M0gKNhIF3ggd09rGiOsbjhdJsW1UfKSzpHS86hHv+U08ta621KqeuBFbgHzO/XWk99iKUQYkZ1JfIc7ktz9ZK6cxqqmAm5ok3R0tSGA3QMZWmtCRH0GaQLFj2JPH6vh4DPg9/w4DU8BLyeco++P+3WvnnqyAAvaq8tL7W8+7lOnjwygOU4/O3vrOFgT4rW6tBZK1uum1/NuvnV427/3fUtbD0+yDeeOMrjB/rY05Xk3S9ZzLVL68mVdvuOTBhPZWQT14N7e+hO5nn1xnlj7m+rCwPw0R/voi7qZ3VLnPfftOx0jz/oYzg7uxE6ZfArpV5zxk3LlVIJYKfWundmmiWEOJui5XBswK0k2ZsssKA2PKvtSRcsNLo8odqVyBH2ednbncTr8eBojaM17kGI7i7ada3VxINeupN5thwb5F8fOcRbr2rjzs0LyBQs7nnuFGG/wbPHhjjQk+Jgb5r1peWZ0zGcK+JVHqJBL0op/uym5bz/u9vY153kAzct46ZV7katrGmhcSd7p1M8rSHuBv9Pt58iFvRyedvYIsMrm+NcvbiOgUyBE4NZfrGrmzdcsbBci78qfBEEP/BO4GrgkdLXNwBP4b4A/L3W+tsz1DYhxCS6hnPYjqYm7Of4QJZ51aEJi5edK8t2znnoA9xe+8i7jnjQx9G+DCioDvknLKOcN222HR9iaWMU03b41aF+AL7zzAmuXFzHk0cGyBRtPnHHOj7xi7185dHDDGaK4yZ2J2OW6vrkLYuINlBKURvx8/FXryNn2mPmABSKsN9D3nQITVC47UwNUTf4c6bNq9e0jru+kN/gu++6CnD3D/zOvz7B4wf6SORMPAqiUxy7eCFM5zfsAKu01q/VWr8WWA0UgCuBD89k44QQ4xUsm+ODmXKoWo7DUHZ6Y/2JnEliksfajmbHycSYYwynw3E0/ekCXYkcTx4ZwPAoqsN+6iOBCUMf3MNTqkI+DvakSOctdpwc5mWrmwj5DT7/ywP8dHsnm9tqWNtaxWs3zedQqTzCyMSu7WgSOZOBTIGBTIHBTIFU/nQvOpEzWd4UoykeHFPeob0+Mib0Tdsh4PUwvzpM1hx/StdkbY+XTtC6dU3zWR+7Zl6chliAR0vBHw/58LwAL9DP13SCv11r3TPq615gudZ6EJCxfiEugKLlcLg3zcGeFPu6UoAq9/DDPm/5EJLJ2I7mSF+arccGOdCTGnN61IiTg1m6EvlxE8Za63GPL1h2+SCSbKlS5b//6iifum8fPck8PsMz5bCJz/BQFw2wszOBo+GVG+bxxy9ZwsHeNKm8xe9tXgDA7etaqA75MDyKRQ0RhnNugbTmqgAbF9TwovZaLm+vxW94SOZNskWLWMhLfTTAgtrwhAejj8gWbRpiAaojPkaf6Viw7PKGsIm010XYuKB60k1fI5RSXL+8gV8d7GMwW5wTE7swvaGeXyml7gH+p/T1a4HHlVIRYHimGiaEOK03ledof4aI34tSUD0qQEJ+g750nkO9aeIhLxG/l8gZE6A7O92efF00wGDGXRMfG1W6IF1wd8U2xQP0pgpjVqkc7svQOZwl5DXw+zyk8zaW4xDyGayaFyedsxjKFtlTKpXwP1s6eN+Ny8rfny1a3Luzi5/v7KI5HuRNVywsT8B6lOLxg/201YZpq4uwsDbMjpPDmLbDypY4tqMJ+gz+5IYlHO3PYCiFQnHVktpx7ybWLXA3ag1lTK5YVIvHo4gFfdRG/WQK1ri/EwDLcaiN+An5DAI+D6bt4DM8pPImQZ9B3rTL594WLbeOf0tViL95xaoxNX3O5oYVDfxw60mePDxAa/XZXygulOkE/3uB1wAvLn39DNCitc7gllYWQsywruEc1WHfpKt3qkN+uhN5Tg45eD2Ka5bUl4cU8qbthn7EHZv2GQY9yUI5+B1Hs6/bLXMQ8Bqk04Vy4NmOpjuRoyrox9Ea09JEA14MjyJbtNh6bIiw3+C3J4YB2LSwhof29fL6zQtojAd57EAfX33sMOmCxfrWKk4O5fjo3btY31rFu29YQsDrllB+y1Vt2I47Ofz+0ouGZTv0pvJUh/1cvaSeq5fUM5wtsrA2POEQUsBrsL61mqFMYUzPur02wtYTbjtHvwsZeRczMvnbXBXk5GAOr+GhOuxnQW2YnZ2JcvAnC+5QTd60x9X0OZsXL63HoygVjotP/Q0XwJRDPdr92zmMO6xzB3ATsHeG2yWEKMkULDIFe1zop/ImTx8dQGuNz/BQFfJRFwlgO5rsqE1UI4eQj4gGvHQlclilomjHBzOk86N6xMqthAnu2nOrFMg+w0PQZ5weYvJ7qQn7KZgOTx0dYHFDhPe9dCkAP9x2knt3dvHpB/azoCbEZ+7cwMfvWMfX33o5f3TdIo72Z/iz7/2Wzz14AICrFtfRnRxbxz6RN1lYFyE3auzdcpzyqpqJ+L0emqrG9qrjIS/za4L0ZwpjzsktWA7xkK/8IlIbDmBrh7xps6QxSm3YfSdQsGyyRYt40EtbbZhscXpzASOqw342LnRX/sz5oR6l1HLgDcAbgQHg+4DSWksvX4gLaDBTHDchaDuaT/5iHzs6E3zwluXlevTgDlVni1Z5vXsqb44ZljA8CtvRDOdMFHC0P1N+wbhvVxfLmmL0pws0xAJ0J/MEjMlXuhgeRdF2ONCT5m1Xt9MQC3DL6ibu392No+GK9lo+fOvKcmG0gNfglRtauW5pA1957DBPHhlgeVOUaMCgOR7k5HCOgNeD7Wi8HsWShiiZokWuaKPRVIf959TbBnecfVljjIjfx/6eJBG/l7DfS860WVx9ujZ+NOjFoxSNVcFyuYjF9RF2dyXQWnF5Ww0Br4fxsyNTu2F5A1uPD82JXbtw9qGefcCvgN/VWh8CUErJiVlCPE9aawYyRWrD/nGBrrW7Lt/WmnnVIbTWdA7nxm1a+vFvT7KjM0Ft2M/XHj/ChvnV1JTOiQ0YBkOZIo2xIABD2SJBr7uZ6gsPHcS0HT708hUcH8iQLdhUBf3YjuZzvzzArw72c9WiWt5741KKVmmoJeQf0749XUnu3dlF2Gfw9msW8URpKea1S+swbYfXXT6fR/f3ceXiWv7sxmXl5aEFy8br8WB4FDURP39920q2dwxTF/WjgfaGCLbWDGVNTNthaWMUv9fDkvoo2zuGUEqxuOH8DjFRStFa427+OtyfZiDt/h2P7oEbHsXyphjVozZy1UUDBAyDmoi//NhowDtm7H86bljRyGcePDD3e/y4k7hvAB5RSt0HfA/OeuSlEGIacqbNcx3DVId9rGqJl3uwBcvmUE+a3lShvOGpOuwnb9qYlsOeriRttRHSBYu7nj7Bi5fW8+YrF/Kn3/stX3r0EH9z+yqUUgR8nvLKHLcGvMVwzuQTP9/LqVLZg55knpDfIOr34Wj33cPW40O0VofY1jFMNm/RlcihtXvk4e6uBPu6U2w9NsShvjTRgNtj3npiGK9HsbwpSsDrYThbpD4a4NvvvKI8NOVoXX7xSeWLRPxeQqXx9o0La0jlTWqjfgJeg8UNUZ456i4JbYq7L1zVYR+xoI9scfq7aydTFfaxaWENuaJNqmASOePdQ/MZw0SGR7F2fhWBUaWc51WFONCbIugzGM4VaYgGplzBtGZenNdsauWGFQ0ANJ5luOpCmDT4tdY/AX5SWr3zatzzcZuUUl8BfqK1fuDCNFGIS0uuaLtDJKbmmaODxEM+CqZN3nTwGW69d9vR7O9OUR8LYCjFlx49xFNHBss/oz4a4L03LCUa9PL7V7bxzd8c418fPsT8mhAt1SGWNUbKSy770wU++pNdBHwe/ub2VXzqvn08vK+Pd77YPVzkK48dZtvxId730qXMqwry0bt3sfNUgqqIe37tB3/4HB2DWTzKrUPzJzcs4aUrGjkxmOXTD+ynK5Hn9nXtgFu7/tRwjtrSRHLetEkXTNrrIyysjZApWuzpTDCUtakO+VBKUbAcWkqBG/QZrGiKY5fmLeD0UE0iVzyvzWUTCfmNaW3WAsYd3FIT8aO1Jle08XrUhEcsnsnjUXz29ZeVvx55UZst06nVkwHuAu5SStUCdwIfAST4hTgP6byFoRTRoJeQY2DaDkGvUVqq6fYcDY+iLhKgP1kgW7R5+sggt61tZnljjGMDGW5Y0Ui0tInoVZe1sr8nxWMH+yiW1qz/9W0ruWxBDbbWbDsxTM60+efXraetLsLm9hoeO9DL269pZzBT5IHd3bx8TTMvX9OM7bjDH9tODLNmXhWHetN0DGZ59/VLuHFF45iwXN4U419+byO/OtTHxgU1NFcFWVQfoa+0KkhryJkWmxbWUhUeKbHsY1NbLUf605wazhEwjFJVztNR1FQ1PhSrwr7yz5htIb9BNOAllbfYvKhmzMEuF4tzmiUpbdr6WulDCHEehnLF8viw4VEYnol7noZH0RgP8sWHD+IzPLzpioVjxp9HP+6vb1uF1prhrMk7vvUsO08muHVNM6bjsLcrSWMswMJSPZ8bVzTy1JFBtncM8+wx913EnZfPL/+sqxbV8vjBfv7spmX8aNtJFtSGuW1t85gJ4pHVMSG/wctWN9OfzjOvOoTX8LCyOc6240MEfB42tdWM2S8A7sqblc1xmuNB9nenWFgbnlaNnLlkYW0ER+tx7wYuFrNfNEKICqK1JpWzpr26YyhT5OH9vdy0smnC0B9NKXfSdE1LnB2dCQayxfLcwHVL68vhurm9lljAy49/e5I9p5LctLKR+liARM6kYNtsaqvh/j09fOPXxzg2kOXPbz59AHnetMkULbwehWnr8hh5LOQrB3xtxM+K5hi1Ef+Em6ZGVIf9vKi9loss84GJ35VcTCT4hbiA8qaDo/W0d33+745TWLbmjo2t4+5ztJ5wM9HlbTV88zfHONaXYTBbJFu0uWxhDbq0YgbguuUN/HxnF4ZH8crL5jGYKTKvOkgs6MNx3E1a9+/upjEW4CXL6jFth0S+SNTvZXVLnNqIn6xps6szQSpvsXFB9Zg2TLda6FyoW1OJLr7BKSEuYjnTpmA5PLinu1yf/Uy24y6Z/PZTx7l3ZxdXLa5j3hlb/S3boT9dwPAo+tJ5TPt0PZqRMsE7OhPsPpVAAeta4wxkCzTE/Bged105uMM+kYCXNfPirGiO0xQPEvIZvKi9FoA7NraSNd0NTKua4lzeVktjPIjX8BAP+ri8rYblTTHqorO7SkWcG+nxC3EBpfMmTxzs57+eOo7fe4SXrW7iilLIZos2W44P8vTRQVJ5C49ya7u/7ep2LNshXbDwGh48yt3Nu6YlTlNVkL5UgQM9qfIpVk3xAA2xADtODpMuWCxpjFK0NQtrwixuiHJ8MIPjaP7yZStY1xp3J5JLwW14FPOqQ9y4sgHbcbhheQOW1ryovXbCdesBr8Gi+vNbWy9mjwS/EC+gouVgO+4a/DNrwwAMZU32diepi/i5bEE1v9jVzT07usr3R/xub/vKxXVcNr+6vHKnP11gQW0Iy9bkTJuljdXlsG6MB6kOu4XIUnmTI/0ZNi2o5rGDfZi25pXr5xEPelnSGHVr0sRDHOvP8pJl9QyVat+MruXfGA8yvybMh16+koFMgRVNsXParCTmPgl+Ic7BUKaIaTtYtiYS8JaXGGqtOdqf4fhgFg/ucM3qljjNo4Zo3FU3bhXLaxbX86c3LeMtV7XRnXQ3VfkMD4vqI+MKkCXzJg0xP0saopOufvF7Pfi97lm1ttasnhfn/j1uNfXlzVEW1ITK3xvyG9RH/aTzNho36EeLBrzEAl6Gs+4B6LO95ly88CT4hZimvGmz/eQwSrvlhC2tWVwfZkFthKN9aU4M5qiL+vEohWk7HOxLUxsNlNd5FyyHI30ZMgWb9fPdIwTrooGzjo+btoPjaJY2xqa95LEhFmRFUwyvx63Zv7QxSnVk7Iqg+TVhnjoywKKGyIS9+QW1IbZ3JFg3v0omYC9BEvxCTFOyVNRsJKgdrTk2kKVrOE/OsqkftXXfZ3jQGk4MZFha2tmZK9rlmvUbJjgQ/ExO6R3C2taqcxpqiQa81McDXLmoFqUULVWhcZU9q0I+mquC4yaNR9RGA6yeF59yCam4OEnwCzFN3ck8oVEB7FHu7tq8aVMf8I7rkVeFfHQMZWmIB1EK+tKFUr2dMLHg2f/rOVozkC7SXh+hIXbuK2YW1oT5w+sWoxS0TLDm3ONRrJ9fPek5vT7DM+sHuIuZI8EvKoppOxQt56wbiyb7vsFSRc0zTdYb9yhFyOdl6/EhPMod9z/Yk+aW1Y0M5op4UIT9xrh1+CPVOxfWhVlUHzmvXa01ET8ej9uGySpCvhCHs4uLkwS/qCh9yQJ96QIbzthwNJVkac39SAgfH8iQzJmsba1CKbe+/SP7e9nXlaSlOsT8mhCbFtYQCZw+BnHnyWGKtsOyxhjLG2NEA16ODmQYyIw921UpaKsNs7jh/EIf3B57czyIR6kXrLCZuHRI8IuKciqRI5m3ymerTldvqkDAcAuqffeZE/xo20kcDQtrw9y0spFH9vdybCBL2G+QLZ149eKl9fzVy1eUw/u5kwk8itKGJ/dAkZqIn4Jlkyu6G7uCPoOI33hBwnpRfXTqB4mKJMEvKkauaJMubYxK563ywSWjnRrKURX2jRkKGiltrB348I93cGIwy82rGlkzr4qfbu/km785RlM8wIdvXcm1S+rIFG3u/m0n39/SwZWLarlhRSOm7fDMsUGWNkbLoT8i4DUmPUv3+bgYq0aKC0OCX1SMoUwRFHg9HgYyhXHB3zGYZW9XkqZ4kPXzq8o99VTexHY0D+zu4cRglv/zitVcscjdbXvTSrcu/bzqUPkdRDTg5Y1XLOS5k8N89fHDLKgN87XHj3C0P8MfvnjRpCtphLhQpEsgZpRlO3QOZWfluYuWM+bw7lOJXOm8VYO+1Nhx9a7hHAd6UzTGggxmCuViZpbtcLgvjeFR3Lerm00La8qhD+6Yf1vd+E1Xhkfx5zcvx7I1f/797RzuTfNXL1/Bi5fWUzvBOw0hLqQZC36l1DeUUr1KqV2jbqtVSj2olDpY+rNmpp5fzA050+bkUA6tz+eI6ufn1HCOLceGyJYO607lLYI+A5/hoWA55Epj8cPZInu7ktSG/BgeRTTg40BPCst2ONibJp232N2ZZDBb5BXrWs76nKOvc151iD+5YQkLasN84jXruGpxHUG/e/CIELNpJnv8/wncesZtHwEe0lovAx4qfS0uYXnTIZW3yJvO1A9+Xs9jl0+fAjeA3TNjNds7hulO5MbVfU/l3UO993YliQV95QnVoM8gb9rs7UrRlchTE/Zz784uGmOBcuXLwUyRgUyBwUxh7J9Z9/ZU3kRrzY0rm/jSmzaxvClGumAxryp40R06Ii49MzbGr7V+XCnVfsbNrwJuKH3+LeBR4MMz1QYx+1J5k7xlkzftaZ9xOhXb0ePWoB/uS+M3POXzTzOlVTJ1kQDpgsWhvgzVo9azB70GvakCyZxJwXKIRsaudY8HffSk8tRHApwYzLKzM8Hbrm7H8CiGs8XyQemO1hRtB5/Hg9/rwdGaVN6iazhHT6pAXcQt4ZAtWuUTtYSYbRd6crdJa90FoLXuUko1XuDnFxdYMm/iNzxki2NX0aTy5rgj+aajaDnsODlMW12YhliwfFt/acy+rS6C3+thKFPEKPWsowEvIZ8x5sUi5DcYyBSwbE3DBLVyfIaHptLPv3dnFz5DccvqJlJ5k5DPYPW8eHlcf/QGLgNFbcRPTdhHsD/D8YEMIZ8XWztsXFAjVS7FnDBnJ3eVUu9SSm1RSm3p6+ub7eaI86BLvd9owEsif/rQkbxp81zHMAPpwlm+ezzTdtjVOUwiZ3J88PSE8XC2yMjI+sgLwKnh3JglkyOh/+Cebr748EEUoLXbs3/m2CB/8YPtfPup4xzuS48Zp992Yoj7dnVz86omQj4DR2vWzq+acg+AUorF9REW10fQWrNxQc057xYWYqZc6H+JPUqpllJvvwXoneyBWuuvA18H2Lx584WfGRTPW9F2a9NHgl6SWat8e6ZgkTNt9nYl2TzJAR9nsh3NnlNJ0gWbxliQ/nSh/K6hK5EjVJq0PT6YIR72kTNtfnWwh5ODWf7oJYsJeA12dSb44iOHcDRsWFDNdcsaKFoOX33sCDnT4vDWND/Y0sG61ir+9MZloODT9++nrS7MH1y7iGS+yLpzKJimlKK9Psr8mrDsnhVzyoUO/p8BbwM+Wfrzpxf4+cUFlDcdFO6wSaI0keozPAxkikT8XhytOdSbYs28qiknPEcmTxui7vCLz/BwajhHW52HoaxJbdiPUopE3uTEQIZ80eaup4+TNx1ODud430uX8k/376OlKoTPUHzryWNctbiOe3acoj9d4OOvXktbXYTHDvRx19PHed93t1ET9uOg+ejtqyhYNk3xIPWxcx+jl9AXc81MLuf8LvAksEIpdVIp9U7cwL9FKXUQuKX0tbhEFUy7PASjcId4tNYMpAuEfAZVIT+9qSInh3JT/qyOoRxR/+k5gVjQS3ciT1/KPcQkU3RX9YR9BqcSebYcHyJvOrxu03z2dad473e2kSnafOTWlbzj2kX0JAt8/9kOfrC1g81tNayfX01VyMcrN8zjS2/axNrWKnpTef7ylhXURwNoDYsbpASCuDTM5KqeN05y100z9ZxibknkTHye032LvOng9TjuKpqAG+K1YT8He1P4DQ9NE5QPBndoKJE1qS9NwmYKVnm4pWMwh9/w8Bc/2E7QZ/CZOzcQ8np4cE8PSxuivO2adta1VvGFhw/yjmsX0V4foZ0IGxdU8/0tHSjgbVe3j1kpVB8N8He/s5pMwSYSMOjPFFjTcm418YWYy+Q9qDhvU23KShWscr0Yr8dDKm+SLlhoTn+f4VHUhPzs6UpMOtnbm8rjNRRaax7Y083bvvkMn33wALGgj0zR4olD/XQl8hztz/BfTx6jYyjH8cEst61rBmBTWw3/+Y4ruH55Q/lnvuPadjwKblrVSG3Ez0C6MGaXr1KKaNBLImfSHA/SGD/3mvhCzFUS/OK8DGWKHO3PTHq/1ppM3l273jGYJeD1kMiZ9KcLGMrDL/f0kC26E75ew0NVyM+uzsSY8IWRkg85DKX45wf2868PHyIW9PH4wT62nRiiNhzgB1s6WNUc47a1zdy9/RRffewwEb/BtUvqMe2JN44tqo/ypTdt4j3XL6Fg2axujZMuWGMenzdtvIY6p2MPhbgYSPCL85IpWnQl8pP2+guWg6Ph/t3dvPc72+hO5knnLQbSRX59qJ9/efggH/rhDroS7vi+z/CglCp/PWI4Z2I5mm/8+ii/PtTPW69u42u/fzntdWG+/OhhfrK9k/50kTdf2cYfXLuI+TUhjg1kuXFlIznTJpk3yy8wZ5pfE6ZgOTRVBWmpCrGuNc5wtshwafdtumCxel6VVLkUlxz5Fy3OSypvkspb5drzZyqYDhrN4wf70cBj+/twNFiOwxOH+qmP+hnMFPngD57juY5hwF1T3zGYK/e6bUdzrD/DYLrIw/t6eeWGedx5+QL8Xg/vv3EZw9ki//3UcdbMi7N+vjsG/6GXrWB9axUvX9NM2G9weVsNGhjOFcmb7g5ia3Sv3nJYWDpisD4WZMOCatrrI6xuibOprWbS06uEuJhJ8IvzkspZeD2qfDIVQMGy6RjMksiZZIomiWyRfV1JPAoePdCHrR0G0gV2n0py69oWPvv6DdRE/Pztz3bxgy0dKOWeNdubdFfqnBjMkMpb/M/WkwR9Bq+7fEH5uZY3xXjlhlYA3nxlW3koZnFDlI/fsY5IwMvSxiixoI+NC6upjwbwGgqfV5E1bQYyBYayRRqi/jE7iOuiARbUhmmMByX0xSVLthKKc+Y4mpzpEAt66U3laSnVl+8ezrO/J4Xf63GLo51MoIE7L1/AD7Z00DGQ43BfGoDrlzXQXBXk06/bwBcfOci3nzrO3q4kf37zco4NZAn6DI72Z+lPFXjyyAC/f+VCqkI+TNsttRz0Gbzj2nZuXdNMa02IXNHG0Zqw3yBn2sRC3nL544DXYFVLvNx+29H0JfOcGMzRVh+54H9/Qsw26fGLc1awHAqWhWk57hi87WDZDieGsjTGgtRFAtSEA2w9PkRrdYg7L59PyGfwxOF+njjUz4qmGM2lpZshv8FfvmwF775+CdtODPGDLR2YtsPuUwliAYNvP3Wc6pCPl61ppi+Vp2g51EX9JHImRcuhtSZEMm/ioAkFDAYyRVIFi6UN0UknZA2Pork6xBWLa4mfR70gIS520uMX56xg2Xz3mQ52n0ryqdesI12wyBdtLPv0Wvh0wWJXZ4LXbppP0Gdw9ZI6HtvfR9F2+KPrFuNojacUzEopXrGuhSN9ae7d2cXL1zRTG/Hzq4P97OxM8O6XLMZyNBsWVFNXWsvfXBVi58lhknmTmrCPNa1VBLwG2aJFumDJMI0QZyE9fnHO8qbNwZ40vakC+3vT9KeLHBvMjuk9P3N0AEfDNUvqAXjpikaKtoNHwZWLaulLuSUYCtbpyeE3X9mG4VHc9cwJUnmLf/vVUda1VnHN0noaY/5y6ANUhXxc3lbL0sYo6+dXl8+sDfu9NMak5r0QZyM9fnHO+lIFOkvLLp89Osja1ipM2yESOf3P6TeHB2iMBVjS4I6hr2utoj4aYEFNCMOjWNUSw6MUR/oypAsFvB4PsaCX12xs5bvPdnCsP4NHwZ/euAxHa5Y0xMa1I+Q3aKuTMXohzpUEvzhnu04l0Rpqwj6eOjLAay5vpT5yujd+92872XJ8iDsvn1/ueRsexSdfsw7Dowj4PDTEghgeRX00QCpvMZgtcHIox21rW7hvdzedwzk+eMtyfF63vPELdYiLEEKGegTuKp0zd8xORmvNvq4k4A7NZIo2p4byhP1etNb899PH+Y9fH+XaJXW88YqFY763KR5EKVhcFynPBXg8iqqwj0X17pCN5Th88GUreOe1i7i8rYZowMu80qohIcQLQ4K/glm2Q08ixzPHBtlybHDSHa6jFW2Ho/0Z4kEvN61sJB708tiBPkzb4UuPHOL7z3Zwy+omPvTylfhKJ2/1Z/LuEYymjc/w0DDJ8YNVIR9tdREW1IR4xfoWLMdh9by4lDUW4gUm/6Mq2L7uJHu6Ung9CsPjYU9ncsyu1okULIfjA1kWN0TRwIuXNfDMsUH+v7t3cf+eHu68fD7vf+lSTNuhP53H5/WwZl4V9bEABctmcX1k3Hm5o7XVhQn4DAazRVa3xMecoiWEeGHI/6qLhGk7DKSL5fXvz1e2aNGfKpZLHQe8MJApcLA3zcrm00XJLNvhUF8an8fDksYoqZzFyeEc6+ZXMZwt8pJl9fx8ZxeH+tL81ctXcN2yBrTWpAsWGxbUUBP2oZSiMRZkWePka+tHeA0Pq+fFSebM8zr0RAgxNQn+i0S2aNMxlKUpHnhBlir2JgvlnrdpO/Qk87RWh+hK5CmYNvNrwwR9BvtOJcmYlnuEot9g96kEtqNZWBumPuaWQfjDFy9iXWtV+aCSVN6ipTpY3jk7Yrrtjgd9srFKiBkkQz1zSCJr4jiTVbu0SeRMCtbEQzEjBcimw3Y0J4eyxII+0gWL//PTXbznrm3s607REA1QsBx2dg7z7JFBTEdTGw5QE/KztzvF1hNDACypj7Cs0V1i+Tvr5405napoO8yvCZ/LpQshLiAJ/jnCcTT7e1JkJwnvdN6icJZw7xjMnrU+/mhD2SKWoxnOFvnrH+9gf3eKWMDLvz9xpFTvxkt9JEh9LEA04GUoWySVt4gGvOw9lSTsN1jZEiPkN1hUH2U4VzzdzoJFXdRPNCBvJoWYqyT454hUwWIwU5x0ZU0qb+H1eMgUxt+vtaY3VaA7mR+zE3YyJwazGErx1z/ZSU+ywN/97hre+eJFHOhJ8/iBvjGPffbYIO+5ayvvuWsre04l6U7kaasN01Aaf2+pChL0GuVduHnTpq1WNlUJMZdJ8M8RiWwRx9EksuaE96cLFrGgl0R+/P3Zoo1pOyhgMF0c/8244/iDmSKHetMMZYrcv7ubrkSev7l9FZctqOalKxtZ2hDlW08eI2/aDGWK/PfTx/n7e/bQFAvSEAvwsXt2c6gvTVtduFzK2Gt42NhWzfLGGFpraiN+4iHp7Qsxl8n/0DmiJ5mnJuJnODs+uE3bwbQdqoK+CV8YElkTBUQCXk4MZmmuGlurxnE02zuGyRTcdw1o+J+tJ7lmSR0bFlSjtcZ2NH943SI+8uOdvO2bz5QPWLlpZSPvuWEJjgOff+gAvzk8wIrm2JidtAGvwbyaEPNqQjiOljo5QsxxEvxzQN60yRRt6iIBBjIFLNsZs2lpZELXa3go5N1yxKOPA+xJ5Qn5vAS8Bv3pAqmCNWZVzFC2SLpglcsqfO7XR7EdzTuuWQTAYLaI7WhWNMV40xUL6U7kWdIYYXlTjBVNp5d2fvjWlWzvGOaaJbWTXovnLGv0hRBzgwT/HJDKW4w+ujZn2sRGB79pj7k/b9nl4Ddth0TOpKZUhthneOhO5MvBr7Xm6ECGiM/9Ve8+leDhfb28dtN8mquCJHJFqsN+asN+Dvelx5VZyJs2qYKFR4GhFAtrw9RFZX29EBczCf45oD9dIOg7PXSSLVhjjgPMFu0xu11zo3r0qbw72fv5hw6Sylt85LaVdA7laK4KEg/6SOYtUjmLiN/LN359lJ9u76Q+6uf1m+eTKVj4DA+rWmIYSnFyOFt+N2E7muFckZDPYNPCanyGh65Ejv50UVbsCHGRk//Bs8B2ND2JPLGQl4jfS3+qUA76gGGQyFs0VZ1+fDJnEij18M+8fzBTIJE1eXR/Hxr46mOHedd1i/nt8SEuW1DDyeEslq15//e20ZMs8PLVTbz16nYUCtOx2dRWU65lv7Qhyu6uBDF8JHMmSxujtNaEyy86SxtjLGmQMXwhLnYS/DMkXbDwGaocqiMs22Fvd5KeZAFDKWJBL7Y+fXJVwOdhODN2gjdVsPCXhn78Xg+J0gSw7Wh6kgWePjqABm5Z1cSDe3tYWBvmtrUt/LZjCK01P9/VRW+ywD++ai0bFlSXN3ttbKsZUwunPhog4veSM202Lqyh5oydtzD93bdCiLlLgn+GHOpJoZRiXWtVecKzaDns6UqSyBZpKq2DzxbdYZgRPsNDIm9i2g4+wx1yyZt2+TF+r4eBjFvpcn93CtNyeGR/H+taq3jfjUvJFi2++etjNMWDbG6rpSeZ554dp3jpysZy6GeKFptKJY9H83gUa1ur8Cg1ZuhJCHFpkXX8M8C03UPIBzIFTpVOqsqbNjtODpPKm9SOOrQk7PeOC1mFO8ELbqkGBQxmivxiVxe6NMu7/cQwyZxJVyJPVyLPzasa8SjFB25ezvKmGP98/372dSf54baTALz5yoXl0N+4oGbSWjgTtUcIcWmRHv8MGJlwrQ0HONSbxu/1cKQ3je1AdWjs8Em2aLGrM8meriRH+tL8/lVt1EX95Qncguku5fzesyf4xa5uogEvly2oRmuoDvv5z98cI+QzuGpxHY7WBH0Gf/e7q/nIj3fyj/fuJW/avHpjK/Ggj2zRYuPCGjmIXIgKJ8E/AwYzBYYzJkGvQchn8FzHMLGAr7yjVWvN00cHeXR/L88eG6JoO3g9Cp/h4fMPHeQTd6zlxGCWoM9L3rQxbV0upfDN3xzjK2/eRMBrkC1aPHGon+uXN5AzbbJFm6DXIBb08fevXMNf/WgHhkdxx2XzSBctLm+bvKcvhKgcEvwvMK01XcN5PnbPbla1xPnr21YR8hnlSdFU3uRfHjrI00cHqQ75eNmaJq5ZXMfy5hjPdST4h3v38NDeXm5d28zWE4P4DY+767Zo84YXLeB7z3Zw9/ZTvGrDPD79wH4KlsNLVzTi9SjWL6jmaF+G/nSe6pCfz73+MrKmjaVhVXNMQl8IAUjwv+CyRZsDvSmGsiZPHRlgIF2grnTYyYGeFJ+6bx+DmSJ/dN0iXrFu3pj1+VcsquXKRbV855kTXLesgYZYsNyrb4wFeOMVCzk+kOWHWzt48nA/R/szvPv6JcyrDtJWFyEe9LF+fhXdiTx7u5JUh91hpWjQ+4Id4CKEuPjJ5O4LLJE12XEygQIcDQ/s6QHcsfx/uHcPGvjUa9fzyg2tGB6F7WjMUccdvuu6xWjgy48ewrQd0gWL5zqGuWmlO3n7jmvbsWzNyaEcf3P7Km5d04xS7kHm4C63bKkOsWFBNcm8ia0dVow6UUsIIaTH/wLrTefZ3ZlkeVOMSMDggT3dvH6zO0STyJp8+s4NLG9yDzCxHc1A1l3PX1da6dMYD/K2q9v5t18d4S9+sJ2lje7ZtjeuagKgpSrE379yDfHSweTDuSKt1eExtXsA6qIBNrXVYFmOrNIRQowhPf5zkCvavO872zjYkxpz+3C2SOdQls6hLMcHsxzuS7N+fhW3rG6iP13k7u2d/Oy5U9y8uqkc+lprhrJFFtWNr13/inUt/NXLVzCcNfnl3l7Wt1bRHD89VLOkMUo06C0VdNPMqw5N2N540EdtNDDhfUKIyiU9/nPwxKF+7tnRxdLGKB8YFeB7u5IULY0CDnSn0cDKlhjtdRFqI+6Sy7Df4K1XtQHgaM1gpkhrTZBF9REG0oUxFTdTeZPV8+J89vUb+PG2Tq5f0VBuw8iGrtUtcVDgNzxjSiQLIcRUZqXHr5Q6ppTaqZTarpTaMhttOB+P7u8FYM+pZPm2nGnzqwN9pAsWNRE/uzsTxINeljdFMTyKl612h2jedMVCqsN+UnmTwUyRBbUhlja4Y+910UB5wxaArTVtte6ZtX98/RJWNsfL9yVyJovqIzTGgzTGguUJXCGEmK7Z7PG/VGvdP4vPf0601jy6311Lv3tU8B/tS/Plx44Q8hl8+NaVbDsxxLrWKlqqQuRNh5etbqI24ueWVU0MZorURHysb4iOKZdQHfZzYjALuD16Qyna6iJkihbDWbO84apoOfi8atKhHSGEmA4Z45+mw31pOodztNeF6RzOlU/C+tWhAQBCfoOP/e9uknmLda1V1EUCtFQF8XgUt61twdHg8ypWt8TH1cgJjxqqyRVt6mMBPB7FkoYYluOQyru1eZJ5k2WN0TGHtAghxLmarQTRwANKqa1KqXdN9ACl1LuUUluUUlv6+vomesgFNdLbf/f1SwDY3ZXAsh22dwzhMxRfeMNGNiyoJuj1sKY1TjTopSrkw6MUjtYk8yZLGyYO7aDPIOD1YNoOBdumIeZOyIb8BhvmV9FQeiFoigeol8laIcTzNFtDPddqrU8ppRqBB5VS+7TWj49+gNb668DXATZv3qwn+iEX0qP7+1jWGOXm1U3w453sOZVkdUucgz1pljXGqAr5+Ngr19CfKlAf8+MrBXxTPMDJwRxVId9ZQ7suGqA/VUBrxrwjqIkEqIlI2AshXjiz0uPXWp8q/dkL/AS4YjbaMV2ZgsUzRwe5YUUD9dEATfEAe04l6RrOc2wgS3t9mHTBwqMUhqFoGHU0YVM8CB5Y2hQ963m0NWE/6YJFLCjVMYUQM+uCB79SKqKUio18DrwM2HWh23Eunjw8QNF2uGFFIwCrW+LsPpXk6aMD2I5mWWMUj4JErogCqsKna+LEgz7WtVZNufomEnDDvikupRWEEDNrNnr8TcATSqnngGeAe7XW981CO6ZFa83d2zsJ+w02t9cAsGZeFYf60jx3chiADfNr2LiwhmjQR8BrjJms9XgUjbGpwzzkM6iN+Me8aAghxEy44GP8WusjwIYL/bznQ2vNJ36xj3t2dPHu65eUj1FcPS+O7WgeP9BPczzIoga3ZMLaeXHylnNedXGUUqxojslB5kKIGSfrAiehteaTv9jH1x8/wluvbuPDt64o37dmnruhaiBTZEljhKrS4Spew/O8gjsW9EkxNSHEjJPgn4DWmk/et4+vPX6Et1zVxsdeuWZMIC+oCRMpDecsb4yNGdoRQoi5ToL/DFprPnXffr722BF+/6qF/P2r1ozrhXs87rAMuDV5ZBWOEOJiIsE/itaaf7p/P1997DBvvnIhf//KtZMOvWxaWEN1yF2xI4QQFxOZSSzRWvPP9+/nK48e5k1XLuQfXrX2rOvu333DElbNi1EXkSJpQoiLi/T4cUP/0w/s58uPHuaNVyzkH6cIfQCf4aE27Cci59gKIS4yFR/8Wms+88ABvvTIYd54xQI+/uqpQ39EyOclLOP7QoiLTEUHv9aazz54gC8+cog3vGgBH3/1ummHPrg7dM/l8UIIMRdUbPBrrfncgwf414fd0P9/d5xb6EcDXtrqwjPYQiGEmBkVG/yf++VBvvDwIX5v87mHPoDhUYT9MjcuhLj4VGTwf+7BA3zhoYO8fvN8PvGacw99IYS4mFVc8H/+lwf4l4cOcufl8/nka9ZL6AshKk5FBf+//PIgn//lQV53+Xw+9VoJfSFEZaqY4P/CQwf53C8P8NpNEvpCiMpWEcH/rw8d5LMPHuA1m1r5p9etx5DQF0JUsEs++L/48EE+8+ABXrOxlX9+3QYJfSFExbukg//Ljx7i0w+UQv9OCX0hhIBLvEhbe12kPJEroS+EEK5LOvhvX9fC7etaZrsZQggxp1zSQz1CCCHGk+AXQogKI8EvhBAVRoJfCCEqjAS/EEJUGAl+IYSoMBL8QghRYST4hRCiwiit9Wy3YUpKqT7g+Gy3YwL1QP9sN+IFItcyd11K1yPXcmG1aa0bzrzxogj+uUoptUVrvXm22/FCkGuZuy6l65FrmRtkqEcIISqMBL8QQlQYCf7n5+uz3YAXkFzL3HUpXY9cyxwgY/xCCFFhpMcvhBAVRoJfCCEqjAT/NCilblVK7VdKHVJKfWSC+1cqpZ5UShWUUn85G22crmlcy5uVUjtKH79RSm2YjXZOxzSu5VWl69iulNqilHrxbLRzOqa6llGPe5FSylZKve5Ctu9cTOP3coNSKlH6vWxXSv3tbLRzuqbzuyld03al1G6l1GMXuo3nTGstH2f5AAzgMLAY8APPAavPeEwj8CLg48Bfznabn+e1XAPUlD6/DXh6ttv9PK4lyul5rPXAvtlu9/ley6jHPQz8HHjdbLf7efxebgDume22voDXUw3sARaWvm6c7XZP9SE9/qldARzSWh/RWheB7wGvGv0ArXWv1vpZwJyNBp6D6VzLb7TWQ6UvnwLmX+A2Ttd0riWtS/8TgQgwV1cyTHktJe8HfgT0XsjGnaPpXsvFYjrX8ybgx1rrE+DmwQVu4zmT4J9aK9Ax6uuTpdsuRud6Le8EfjGjLTp/07oWpdQdSql9wL3AH1ygtp2rKa9FKdUK3AF89QK263xM99/Y1Uqp55RSv1BKrbkwTTsv07me5UCNUupRpdRWpdRbL1jrztMlfdj6C0RNcNtc7TlOZdrXopR6KW7wz9Vx8Wldi9b6J8BPlFIvAf4BuHmmG3YepnMtnwc+rLW2lZro4XPGdK5lG24NmbRS6nbgbmDZTDfsPE3nerzA5cBNQAh4Uin1lNb6wEw37nxJ8E/tJLBg1NfzgVOz1Jbna1rXopRaD/w7cJvWeuACte1cndPvRWv9uFJqiVKqXms91wprTedaNgPfK4V+PXC7UsrSWt99QVo4fVNei9Y6OerznyulvjxHfy8wvd/NSaBfa50BMkqpx4ENwJwNfhnqmdqzwDKl1CKllB94A/CzWW7T+ZryWpRSC4EfA2+Zyz0WpnctS1UpKZVSm3An5+biC9mU16K1XqS1btdatwM/BP5kDoY+TO/30jzq93IFbg7Nxd8LTO///0+B65RSXqVUGLgS2HuB23lOpMc/Ba21pZR6H3A/7gz/N7TWu5VS7y7d/1WlVDOwBYgDjlLqA7gz/8nJfu5smM61AH8L1AFfLv3ftPQcrEA4zWt5LfBWpZQJ5IDfGzXZO2dM81ouCtO8ltcB71FKWbi/lzfMxd8LTO96tNZ7lVL3ATsAB/h3rfWu2Wv11KRkgxBCVBgZ6hFCiAojwS+EEBVGgl8IISqMBL8QQlQYCX4hhKgwEvyiIpQqWo5UT3xOKfUXSilP6b7NSqkvzPDzv1optXomn0OI6ZLlnKIiKKXSWuto6fNG4DvAr7XWf3eBnv8/cStS/vAcvsertbZmrlWiUknwi4owOvhLXy/G3ZVZD1yPW077d0o7ST+PW3MlB7xDa71fKfV24NW4m3jWAp/B3Qn8FqAA3K61HlRKLQG+BDQAWeCPgFrgHiBR+nhtqRljHqe13ld6gRgENgLbtNYfnIm/D1HZZOeuqEha6yOloZ7GM+7aB7yktGPzZuD/cTqo1+IGchA4hFs0baNS6nPAW3FfML4OvFtrfVApdSXwZa31jUqpnzGqx6+UeujMxwE3lp5nOXCz1tqemasXlU6CX1SyiSovVgHfUkotw63C6Bt13yNa6xSQUkolgP8t3b4TWK+UiuIeZPM/oypoBsY96dSP+x8JfTGTJPhFRSoN9di4h5qsGnXXP+AG/B1KqXbg0VH3FUZ97oz62sH9v+QBhrXWl03x9FM9LjP1FQhx/mRVj6g4SqkG3ANNvjhBcbAqoLP0+dvP5eeWivIdVUrdWXoepU6fWZwCYtN4nBAzToJfVIrQyHJO4JfAA8DHJnjcPwGfUEr9Gnci91y9GXinUuo5YDenj+n7HvAhpdRvSxPAkz1OiBknq3qEEKLCSI9fCCEqjAS/EEJUGAl+IYSoMBL8QghRYST4hRCiwkjwCyFEhZHgF0KICvP/AwYGxfLzfh6RAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(x=data.Diameter, y=data.Age)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b21e1b9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Length', ylabel='Age'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(x=data.Length, y=data.Age)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c9fb70ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Sex', ylabel='Age'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(data.Sex,data.Age)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6a2734b8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Diameter', ylabel='Age'>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data.Diameter,data.Age)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2403639",
   "metadata": {},
   "source": [
    "## Multivariate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fdddd771",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "daf7d980",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Height</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Shucked weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M</td>\n",
       "      <td>0.455</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.5140</td>\n",
       "      <td>0.2245</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.150</td>\n",
       "      <td>16.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.265</td>\n",
       "      <td>0.090</td>\n",
       "      <td>0.2255</td>\n",
       "      <td>0.0995</td>\n",
       "      <td>0.0485</td>\n",
       "      <td>0.070</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>F</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.135</td>\n",
       "      <td>0.6770</td>\n",
       "      <td>0.2565</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.210</td>\n",
       "      <td>10.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.5160</td>\n",
       "      <td>0.2155</td>\n",
       "      <td>0.1140</td>\n",
       "      <td>0.155</td>\n",
       "      <td>11.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>I</td>\n",
       "      <td>0.330</td>\n",
       "      <td>0.255</td>\n",
       "      <td>0.080</td>\n",
       "      <td>0.2050</td>\n",
       "      <td>0.0895</td>\n",
       "      <td>0.0395</td>\n",
       "      <td>0.055</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Sex  Length  Diameter  Height  Whole weight  Shucked weight  Viscera weight  \\\n",
       "0   M   0.455     0.365   0.095        0.5140          0.2245          0.1010   \n",
       "1   M   0.350     0.265   0.090        0.2255          0.0995          0.0485   \n",
       "2   F   0.530     0.420   0.135        0.6770          0.2565          0.1415   \n",
       "3   M   0.440     0.365   0.125        0.5160          0.2155          0.1140   \n",
       "4   I   0.330     0.255   0.080        0.2050          0.0895          0.0395   \n",
       "\n",
       "   Shell weight   Age  \n",
       "0         0.150  16.5  \n",
       "1         0.070   8.5  \n",
       "2         0.210  10.5  \n",
       "3         0.155  11.5  \n",
       "4         0.055   8.5  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "fc8ff5bd",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Sex', ylabel='Height'>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data[\"Sex\"],data[\"Height\"],hue=data[\"Age\"])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "221f63da",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='Age'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data.Age.value_counts().index,data.Age.value_counts())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "529a5ecb",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='Sex'>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAD8CAYAAACGsIhGAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAASIklEQVR4nO3df6zd913f8ecLezUpLGqCbzLP15ndzrDZWQfkYmWrBhkZi6eiOhJEvdkg1hbJLPJKgTEWrxKRJlmqRveDTiSa1WZxoIpltWXxUFOauWOFKql70xZcJ7i5w519axPfLqKE0rnYfe+P82U7vTn2x77xOce35/mQjs73+/5+vt/v2zryfd3vr3tSVUiSdCnfNu4GJEnXPsNCktRkWEiSmgwLSVKTYSFJajIsJElNQwuLJI8mOZvk80vq70hyPMmxJP+mr74nyXy37K6++m1JjnbL3pskw+pZkjTYMI8sHgO29xeS/F1gB/DmqtoKvKerbwFmga3dOg8nWdWt9giwC9jcvb5pm5Kk4RtaWFTVJ4CXl5QfAN5dVee6MWe7+g7gQFWdq6oTwDywLck64PqqeqZ6Tw8+Dtw9rJ4lSYOtHvH+vhv4O0n2Av8H+Pmq+jSwHni2b9xCV/uzbnppvWnt2rW1cePGq9GzJE2M55577stVNbW0PuqwWA3cANwO/ABwMMkbgUHXIeoS9YGS7KJ3yopbbrmFubm519ywJE2SJP9rUH3Ud0MtAB+uniPAN4C1XX1D37hp4HRXnx5QH6iq9lXVTFXNTE29KhglScs06rD4L8APAyT5buB1wJeBQ8BskjVJNtG7kH2kqs4AryS5vbsL6j7gyRH3LEkTb2inoZI8AdwBrE2yADwEPAo82t1O+3VgZ3fh+liSg8DzwHlgd1Vd6Db1AL07q64DnupekqQRyrfqnyifmZkpr1lI0pVJ8lxVzSyt+wS3JKnJsJAkNRkWkqQmw0KS1GRYSJKaRv0E9zXptn/x+Lhb+Jb33C/dN+4WJL0GHllIkpoMC0lSk2EhSWoyLCRJTYaFJKnJsJAkNRkWkqQmw0KS1GRYSJKaDAtJUpNhIUlqMiwkSU1DC4skjyY5233f9tJlP5+kkqztq+1JMp/keJK7+uq3JTnaLXtvkgyrZ0nSYMM8sngM2L60mGQD8CPAyb7aFmAW2Nqt83CSVd3iR4BdwObu9aptSpKGa2hhUVWfAF4esOjfA78AVF9tB3Cgqs5V1QlgHtiWZB1wfVU9U1UFPA7cPayeJUmDjfSaRZK3AV+qqt9dsmg9cKpvfqGrre+ml9YlSSM0si8/SvJ64F3A3x+0eECtLlG/2D520TtlxS233LKMLiVJg4zyyOJNwCbgd5N8EZgGPpPkL9E7YtjQN3YaON3VpwfUB6qqfVU1U1UzU1NTV7l9SZpcIwuLqjpaVTdV1caq2kgvCL6/qv4QOATMJlmTZBO9C9lHquoM8EqS27u7oO4DnhxVz5KknmHeOvsE8AzwPUkWktx/sbFVdQw4CDwPfBTYXVUXusUPAO+jd9H7fwJPDatnSdJgQ7tmUVX3NpZvXDK/F9g7YNwccOtVbU6SdEV8gluS1GRYSJKaDAtJUtPInrOQhuHkv/4b425hItzyi0fH3YLGzCMLSVKTYSFJajIsJElNhoUkqckL3JLG5i3/8S3jbuFb3iff8cmrsh2PLCRJTYaFJKnJsJAkNRkWkqQmw0KS1GRYSJKaDAtJUpNhIUlqMiwkSU3D/A7uR5OcTfL5vtovJfn9JL+X5NeTvKFv2Z4k80mOJ7mrr35bkqPdsvcmybB6liQNNswji8eA7UtqTwO3VtWbgS8AewCSbAFmga3dOg8nWdWt8wiwC9jcvZZuU5I0ZEMLi6r6BPDyktrHqup8N/ssMN1N7wAOVNW5qjoBzAPbkqwDrq+qZ6qqgMeBu4fVsyRpsHFes/gnwFPd9HrgVN+yha62vpteWpckjdBYwiLJu4DzwAf+vDRgWF2ifrHt7koyl2RucXHxtTcqSQLGEBZJdgI/Cvyj7tQS9I4YNvQNmwZOd/XpAfWBqmpfVc1U1czU1NTVbVySJthIwyLJduBfAm+rqj/tW3QImE2yJskmeheyj1TVGeCVJLd3d0HdBzw5yp4lSUP88qMkTwB3AGuTLAAP0bv7aQ3wdHcH7LNV9U+r6liSg8Dz9E5P7a6qC92mHqB3Z9V19K5xPIUkaaSGFhZVde+A8vsvMX4vsHdAfQ649Sq2Jkm6Qj7BLUlqMiwkSU2GhSSpybCQJDUZFpKkJsNCktRkWEiSmgwLSVKTYSFJajIsJElNhoUkqcmwkCQ1GRaSpCbDQpLUZFhIkpoMC0lSk2EhSWoyLCRJTYaFJKlpaGGR5NEkZ5N8vq92Y5Knk7zYvd/Qt2xPkvkkx5Pc1Ve/LcnRbtl7k2RYPUuSBhvmkcVjwPYltQeBw1W1GTjczZNkCzALbO3WeTjJqm6dR4BdwObutXSbkqQhG1pYVNUngJeXlHcA+7vp/cDdffUDVXWuqk4A88C2JOuA66vqmaoq4PG+dSRJIzLqaxY3V9UZgO79pq6+HjjVN26hq63vppfWB0qyK8lckrnFxcWr2rgkTbJr5QL3oOsQdYn6QFW1r6pmqmpmamrqqjUnSZNu1GHxUndqie79bFdfADb0jZsGTnf16QF1SdIIjTosDgE7u+mdwJN99dkka5Jsonch+0h3quqVJLd3d0Hd17eOJGlEVg9rw0meAO4A1iZZAB4C3g0cTHI/cBK4B6CqjiU5CDwPnAd2V9WFblMP0Luz6jrgqe4lSRqhoYVFVd17kUV3XmT8XmDvgPoccOtVbE2SdIWulQvckqRrmGEhSWoyLCRJTYaFJKnJsJAkNRkWkqQmw0KS1GRYSJKaDAtJUpNhIUlqMiwkSU2GhSSpybCQJDUZFpKkpssKi+77J/rnVyV5aDgtSZKuNZd7ZHFnko8kWZfkVuBZ4C8OsS9J0jXksr78qKr+YZK3A0eBPwXurapPDrUzSdI143JPQ20G3gl8CPgi8JNJXj/EviRJ15DLPQ31X4FfrKqfAn4IeBH49HJ3muRnkxxL8vkkTyT59iQ3Jnk6yYvd+w194/ckmU9yPMldy92vJGl5LjcstlXVfwOonn8L3L2cHSZZD/w0MFNVtwKrgFngQeBwVW0GDnfzJNnSLd8KbAceTrJqOfuWJC3P5YbFdUnen+Sj8P9+gP/ga9jv6m6bq4HXA6eBHcD+bvl+/n8Y7QAOVNW5qjoBzAPbXsO+JUlX6HLD4jHgN4F13fwXgJ9Zzg6r6kvAe4CTwBngK1X1MeDmqjrTjTkD3NStsh441beJha72Kkl2JZlLMre4uLic9iRJA1xuWKytqoPANwCq6jxwYTk77K5F7AA2AX8Z+I4kP3GpVQbUatDAqtpXVTNVNTM1NbWc9iRJA1xuWHw1yXfR/ZBOcjvwlWXu8+8BJ6pqsar+DPgw8LeBl5Ks67a/DjjbjV8ANvStP03vtJUkaUQuNyx+DjgEvCnJJ4HHgXcsc58ngduTvD5JgDuBF7rt7+zG7ASe7KYPAbNJ1iTZBGwGjixz35KkZbjkQ3lJfgA4VVWfSfJDwE8BPwZ8jN5v/Fesqj6V5IPAZ4DzwGeBfcB3Age7Py1yErinG38syUHg+W787qpa1ikwSdLytJ7g/k/0ThtB71TRu+gdUXwvvR/wP76cnVbVQ8DSvy11jt5RxqDxe4G9y9mXJOm1a4XFqqp6uZt+O7Cvqj4EfCjJ54bamSTpmtG6ZrGqexYCer/1f7xv2WX9XSlJ0srX+oH/BPA/knwZ+Brw2wBJ/irLvxtKkrTCXDIsqmpvksP0Hsb7WFX9+fMN38by74aSJK0wzVNJVfXsgNoXhtOOJOla5NeqSpKaDAtJUpNhIUlqMiwkSU2GhSSpybCQJDUZFpKkJsNCktRkWEiSmgwLSVKTYSFJajIsJElNhoUkqWksYZHkDUk+mOT3k7yQ5G8luTHJ00le7N5v6Bu/J8l8kuNJ7hpHz5I0ycZ1ZPHLwEer6q8BfxN4AXgQOFxVm4HD3TxJtgCzwFZgO/BwklVj6VqSJtTIwyLJ9cAPAu8HqKqvV9UfATuA/d2w/cDd3fQO4EBVnauqE8A8sG2UPUvSpBvHkcUbgUXgPyf5bJL3JfkO4OaqOgPQvd/UjV8PnOpbf6GrvUqSXUnmkswtLi4O718gSRNmHGGxGvh+4JGq+j7gq3SnnC4iA2o1oEZV7auqmaqamZqaeu2dSpKA8YTFArBQVZ/q5j9ILzxeSrIOoHs/2zd+Q9/608DpEfUqSWIMYVFVfwicSvI9XelO4HngELCzq+0EnuymDwGzSdYk2QRsBo6MsGVJmnirx7TfdwAfSPI64A+Af0wvuA4muR84CdwDUFXHkhykFyjngd1VdWE8bUvSZBpLWFTV54CZAYvuvMj4vcDeYfYkSbo4n+CWJDUZFpKkJsNCktRkWEiSmgwLSVKTYSFJajIsJElNhoUkqcmwkCQ1GRaSpCbDQpLUZFhIkpoMC0lSk2EhSWoyLCRJTYaFJKnJsJAkNRkWkqSmsYVFklVJPpvkN7r5G5M8neTF7v2GvrF7kswnOZ7krnH1LEmTapxHFu8EXuibfxA4XFWbgcPdPEm2ALPAVmA78HCSVSPuVZIm2ljCIsk08FbgfX3lHcD+bno/cHdf/UBVnauqE8A8sG1ErUqSGN+RxX8AfgH4Rl/t5qo6A9C939TV1wOn+sYtdDVJ0oiMPCyS/Chwtqqeu9xVBtTqItvelWQuydzi4uKye5QkfbNxHFm8BXhbki8CB4AfTvJrwEtJ1gF072e78QvAhr71p4HTgzZcVfuqaqaqZqampobVvyRNnJGHRVXtqarpqtpI78L1x6vqJ4BDwM5u2E7gyW76EDCbZE2STcBm4MiI25akibZ63A30eTdwMMn9wEngHoCqOpbkIPA8cB7YXVUXxtemJE2esYZFVf0W8Fvd9P8G7rzIuL3A3pE1Jkn6Jj7BLUlqMiwkSU2GhSSpybCQJDUZFpKkJsNCktRkWEiSmgwLSVKTYSFJajIsJElNhoUkqcmwkCQ1GRaSpCbDQpLUZFhIkpoMC0lSk2EhSWoyLCRJTSMPiyQbkvz3JC8kOZbknV39xiRPJ3mxe7+hb509SeaTHE9y16h7lqRJN44ji/PAP6+qvw7cDuxOsgV4EDhcVZuBw9083bJZYCuwHXg4yaox9C1JE2vkYVFVZ6rqM930K8ALwHpgB7C/G7YfuLub3gEcqKpzVXUCmAe2jbRpSZpwY71mkWQj8H3Ap4Cbq+oM9AIFuKkbth441bfaQleTJI3I2MIiyXcCHwJ+pqr++FJDB9TqItvclWQuydzi4uLVaFOSxJjCIslfoBcUH6iqD3fll5Ks65avA8529QVgQ9/q08DpQdutqn1VNVNVM1NTU8NpXpIm0DjuhgrwfuCFqvp3fYsOATu76Z3Ak3312SRrkmwCNgNHRtWvJAlWj2GfbwF+Ejia5HNd7V8B7wYOJrkfOAncA1BVx5IcBJ6ndyfV7qq6MPKuJWmCjTwsqup3GHwdAuDOi6yzF9g7tKYkSZfkE9ySpCbDQpLUZFhIkpoMC0lSk2EhSWoyLCRJTYaFJKnJsJAkNRkWkqQmw0KS1GRYSJKaDAtJUpNhIUlqMiwkSU2GhSSpybCQJDUZFpKkJsNCktS0YsIiyfYkx5PMJ3lw3P1I0iRZEWGRZBXwK8A/ALYA9ybZMt6uJGlyrIiwALYB81X1B1X1deAAsGPMPUnSxFgpYbEeONU3v9DVJEkjsHrcDVymDKjVqwYlu4Bd3eyfJDk+1K7Gay3w5XE3cbnynp3jbuFasqI+OwAeGvRfcGKtqM8vP33Fn91fGVRcKWGxAGzom58GTi8dVFX7gH2jamqcksxV1cy4+9CV87Nb2Sb181spp6E+DWxOsinJ64BZ4NCYe5KkibEijiyq6nySfwb8JrAKeLSqjo25LUmaGCsiLACq6iPAR8bdxzVkIk63fYvys1vZJvLzS9WrrhNLkvRNVso1C0nSGBkWK0SSSvKrffOrkywm+Y1x9qUrl+RPxt2DrlySC0k+1/faOO6eRmnFXLMQXwVuTXJdVX0N+BHgS2PuSZokX6uq7x13E+PikcXK8hTw1m76XuCJMfYiaYIYFivLAWA2ybcDbwY+NeZ+pElyXd8pqF8fdzOj5mmoFaSqfq87T3ov3kYsjdpEn4YyLFaeQ8B7gDuA7xpvK5ImhWGx8jwKfKWqjia5Y8y9SJoQhsUKU1ULwC+Puw9Jk8UnuCVJTd4NJUlqMiwkSU2GhSSpybCQJDUZFpKkJsNCktRkWEiSmgwLSVLT/wU2t8MotYCz9gAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data.Sex.value_counts().index,data.Sex.value_counts())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0a229082",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<AxesSubplot:title={'center':'Length'}>,\n",
       "        <AxesSubplot:title={'center':'Diameter'}>,\n",
       "        <AxesSubplot:title={'center':'Height'}>],\n",
       "       [<AxesSubplot:title={'center':'Whole weight'}>,\n",
       "        <AxesSubplot:title={'center':'Shucked weight'}>,\n",
       "        <AxesSubplot:title={'center':'Viscera weight'}>],\n",
       "       [<AxesSubplot:title={'center':'Shell weight'}>,\n",
       "        <AxesSubplot:title={'center':'Age'}>, <AxesSubplot:>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 9 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data.hist(figsize=(10,8))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0574b9bf",
   "metadata": {},
   "source": [
    "## Descriptive statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e9adaf2e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Height</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Shucked weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>4177.000000</td>\n",
       "      <td>4177.000000</td>\n",
       "      <td>4177.000000</td>\n",
       "      <td>4177.000000</td>\n",
       "      <td>4177.000000</td>\n",
       "      <td>4177.000000</td>\n",
       "      <td>4177.000000</td>\n",
       "      <td>4177.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.523992</td>\n",
       "      <td>0.407881</td>\n",
       "      <td>0.139516</td>\n",
       "      <td>0.828742</td>\n",
       "      <td>0.359367</td>\n",
       "      <td>0.180594</td>\n",
       "      <td>0.238831</td>\n",
       "      <td>11.433684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.120093</td>\n",
       "      <td>0.099240</td>\n",
       "      <td>0.041827</td>\n",
       "      <td>0.490389</td>\n",
       "      <td>0.221963</td>\n",
       "      <td>0.109614</td>\n",
       "      <td>0.139203</td>\n",
       "      <td>3.224169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.075000</td>\n",
       "      <td>0.055000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002000</td>\n",
       "      <td>0.001000</td>\n",
       "      <td>0.000500</td>\n",
       "      <td>0.001500</td>\n",
       "      <td>2.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.450000</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.115000</td>\n",
       "      <td>0.441500</td>\n",
       "      <td>0.186000</td>\n",
       "      <td>0.093500</td>\n",
       "      <td>0.130000</td>\n",
       "      <td>9.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.545000</td>\n",
       "      <td>0.425000</td>\n",
       "      <td>0.140000</td>\n",
       "      <td>0.799500</td>\n",
       "      <td>0.336000</td>\n",
       "      <td>0.171000</td>\n",
       "      <td>0.234000</td>\n",
       "      <td>10.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.615000</td>\n",
       "      <td>0.480000</td>\n",
       "      <td>0.165000</td>\n",
       "      <td>1.153000</td>\n",
       "      <td>0.502000</td>\n",
       "      <td>0.253000</td>\n",
       "      <td>0.329000</td>\n",
       "      <td>12.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.815000</td>\n",
       "      <td>0.650000</td>\n",
       "      <td>1.130000</td>\n",
       "      <td>2.825500</td>\n",
       "      <td>1.488000</td>\n",
       "      <td>0.760000</td>\n",
       "      <td>1.005000</td>\n",
       "      <td>30.500000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Length     Diameter       Height  Whole weight  Shucked weight  \\\n",
       "count  4177.000000  4177.000000  4177.000000   4177.000000     4177.000000   \n",
       "mean      0.523992     0.407881     0.139516      0.828742        0.359367   \n",
       "std       0.120093     0.099240     0.041827      0.490389        0.221963   \n",
       "min       0.075000     0.055000     0.000000      0.002000        0.001000   \n",
       "25%       0.450000     0.350000     0.115000      0.441500        0.186000   \n",
       "50%       0.545000     0.425000     0.140000      0.799500        0.336000   \n",
       "75%       0.615000     0.480000     0.165000      1.153000        0.502000   \n",
       "max       0.815000     0.650000     1.130000      2.825500        1.488000   \n",
       "\n",
       "       Viscera weight  Shell weight          Age  \n",
       "count     4177.000000   4177.000000  4177.000000  \n",
       "mean         0.180594      0.238831    11.433684  \n",
       "std          0.109614      0.139203     3.224169  \n",
       "min          0.000500      0.001500     2.500000  \n",
       "25%          0.093500      0.130000     9.500000  \n",
       "50%          0.171000      0.234000    10.500000  \n",
       "75%          0.253000      0.329000    12.500000  \n",
       "max          0.760000      1.005000    30.500000  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "1b2afc02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.365, 0.265, 0.42 , 0.255, 0.3  , 0.415, 0.425, 0.37 , 0.44 ,\n",
       "       0.38 , 0.35 , 0.405, 0.355, 0.4  , 0.28 , 0.34 , 0.295, 0.32 ,\n",
       "       0.275, 0.48 , 0.45 , 0.445, 0.475, 0.47 , 0.56 , 0.525, 0.55 ,\n",
       "       0.29 , 0.335, 0.175, 0.15 , 0.375, 0.245, 0.41 , 0.36 , 0.31 ,\n",
       "       0.385, 0.19 , 0.345, 0.325, 0.495, 0.39 , 0.235, 0.51 , 0.465,\n",
       "       0.535, 0.435, 0.43 , 0.395, 0.305, 0.195, 0.54 , 0.26 , 0.2  ,\n",
       "       0.33 , 0.23 , 0.285, 0.52 , 0.455, 0.205, 0.13 , 0.5  , 0.515,\n",
       "       0.485, 0.46 , 0.545, 0.57 , 0.575, 0.16 , 0.21 , 0.49 , 0.25 ,\n",
       "       0.27 , 0.505, 0.215, 0.225, 0.055, 0.1  , 0.09 , 0.12 , 0.53 ,\n",
       "       0.145, 0.22 , 0.6  , 0.58 , 0.585, 0.565, 0.555, 0.185, 0.165,\n",
       "       0.125, 0.59 , 0.14 , 0.11 , 0.155, 0.315, 0.24 , 0.17 , 0.18 ,\n",
       "       0.105, 0.595, 0.135, 0.625, 0.63 , 0.61 , 0.65 , 0.62 , 0.605,\n",
       "       0.095, 0.115, 0.615])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Diameter.unique()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d9aba780",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.150    267\n",
       "0.140    220\n",
       "0.155    217\n",
       "0.175    211\n",
       "0.160    205\n",
       "0.125    202\n",
       "0.165    193\n",
       "0.135    189\n",
       "0.145    182\n",
       "0.130    169\n",
       "0.120    169\n",
       "0.170    160\n",
       "0.100    145\n",
       "0.110    135\n",
       "0.115    133\n",
       "0.180    131\n",
       "0.090    124\n",
       "0.105    114\n",
       "0.185    103\n",
       "0.190    103\n",
       "0.095     91\n",
       "0.195     78\n",
       "0.080     76\n",
       "0.085     74\n",
       "0.200     68\n",
       "0.075     61\n",
       "0.070     47\n",
       "0.205     45\n",
       "0.065     39\n",
       "0.215     31\n",
       "0.060     26\n",
       "0.055     25\n",
       "0.210     23\n",
       "0.050     18\n",
       "0.220     17\n",
       "0.040     13\n",
       "0.225     13\n",
       "0.045     11\n",
       "0.230     10\n",
       "0.030      6\n",
       "0.035      6\n",
       "0.235      6\n",
       "0.025      5\n",
       "0.240      4\n",
       "0.250      3\n",
       "0.020      2\n",
       "0.015      2\n",
       "0.000      2\n",
       "0.010      1\n",
       "0.515      1\n",
       "1.130      1\n",
       "Name: Height, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Height.value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "9daf7ecf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "M    1528\n",
       "I    1342\n",
       "F    1307\n",
       "Name: Sex, dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.Sex.value_counts()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d4d5b04",
   "metadata": {},
   "source": [
    "## Handling missing values and outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2bdd7a55",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Age'>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data.Age)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "1d951bef",
   "metadata": {},
   "outputs": [],
   "source": [
    "quant = data.quantile(q = [0.75,0.25])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "30064d57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Height</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Shucked weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.75</th>\n",
       "      <td>0.615</td>\n",
       "      <td>0.48</td>\n",
       "      <td>0.165</td>\n",
       "      <td>1.1530</td>\n",
       "      <td>0.502</td>\n",
       "      <td>0.2530</td>\n",
       "      <td>0.329</td>\n",
       "      <td>12.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.25</th>\n",
       "      <td>0.450</td>\n",
       "      <td>0.35</td>\n",
       "      <td>0.115</td>\n",
       "      <td>0.4415</td>\n",
       "      <td>0.186</td>\n",
       "      <td>0.0935</td>\n",
       "      <td>0.130</td>\n",
       "      <td>9.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Length  Diameter  Height  Whole weight  Shucked weight  Viscera weight  \\\n",
       "0.75   0.615      0.48   0.165        1.1530           0.502          0.2530   \n",
       "0.25   0.450      0.35   0.115        0.4415           0.186          0.0935   \n",
       "\n",
       "      Shell weight   Age  \n",
       "0.75         0.329  12.5  \n",
       "0.25         0.130   9.5  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "quant"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4c175475",
   "metadata": {},
   "outputs": [],
   "source": [
    "iqr = quant.iloc[0] - quant.iloc[1]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "bd4d510b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Length            0.1650\n",
       "Diameter          0.1300\n",
       "Height            0.0500\n",
       "Whole weight      0.7115\n",
       "Shucked weight    0.3160\n",
       "Viscera weight    0.1595\n",
       "Shell weight      0.1990\n",
       "Age               3.0000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iqr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "fac0c56e",
   "metadata": {},
   "outputs": [],
   "source": [
    "u = quant.iloc[0]+(1.5*iqr)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "bf566982",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Length             0.86250\n",
       "Diameter           0.67500\n",
       "Height             0.24000\n",
       "Whole weight       2.22025\n",
       "Shucked weight     0.97600\n",
       "Viscera weight     0.49225\n",
       "Shell weight       0.62750\n",
       "Age               17.00000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "u"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "22e2f413",
   "metadata": {},
   "outputs": [],
   "source": [
    "l = quant.iloc[1]+(1.5*iqr)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c1eba273",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Length             0.69750\n",
       "Diameter           0.54500\n",
       "Height             0.19000\n",
       "Whole weight       1.50875\n",
       "Shucked weight     0.66000\n",
       "Viscera weight     0.33275\n",
       "Shell weight       0.42850\n",
       "Age               14.00000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "97f87c68",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\AppData\\Local\\Temp\\ipykernel_6492\\4080730010.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
      "  data.mean()\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Length             0.523992\n",
       "Diameter           0.407881\n",
       "Height             0.139516\n",
       "Whole weight       0.828742\n",
       "Shucked weight     0.359367\n",
       "Viscera weight     0.180594\n",
       "Shell weight       0.238831\n",
       "Age               11.433684\n",
       "dtype: float64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "17e7deb6",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\AppData\\Local\\Temp\\ipykernel_6492\\3437575075.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
      "  data.median()\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Length             0.5450\n",
       "Diameter           0.4250\n",
       "Height             0.1400\n",
       "Whole weight       0.7995\n",
       "Shucked weight     0.3360\n",
       "Viscera weight     0.1710\n",
       "Shell weight       0.2340\n",
       "Age               10.5000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.median()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "26c2deb0",
   "metadata": {},
   "outputs": [],
   "source": [
    "q1=data.Diameter.quantile(0.25)  \n",
    "q3=data.Diameter.quantile(0.75)\n",
    "\n",
    "IQR=q3-q1\n",
    "\n",
    "upper_limit= q3 + 1.5*IQR\n",
    "lower_limit= q1 - 1.5*IQR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "9e009a36",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Upper limit : 0.675\n",
      "Lower limit : 0.15499999999999997\n"
     ]
    }
   ],
   "source": [
    "print(\"Upper limit :\",upper_limit)\n",
    "print(\"Lower limit :\",lower_limit)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "f8e7260d",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Diameter']= np.where(data['Diameter']<lower_limit,0.4250,data['Diameter'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "7d7eada7",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ELCOT\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Diameter'>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data.Diameter)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e9aa4df",
   "metadata": {},
   "source": [
    "## Label Encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "fb8e00bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Height</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Shucked weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>0.455</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.5140</td>\n",
       "      <td>0.2245</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.150</td>\n",
       "      <td>16.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.265</td>\n",
       "      <td>0.090</td>\n",
       "      <td>0.2255</td>\n",
       "      <td>0.0995</td>\n",
       "      <td>0.0485</td>\n",
       "      <td>0.070</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.135</td>\n",
       "      <td>0.6770</td>\n",
       "      <td>0.2565</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.210</td>\n",
       "      <td>10.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.5160</td>\n",
       "      <td>0.2155</td>\n",
       "      <td>0.1140</td>\n",
       "      <td>0.155</td>\n",
       "      <td>11.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0.330</td>\n",
       "      <td>0.255</td>\n",
       "      <td>0.080</td>\n",
       "      <td>0.2050</td>\n",
       "      <td>0.0895</td>\n",
       "      <td>0.0395</td>\n",
       "      <td>0.055</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>0.425</td>\n",
       "      <td>0.300</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.3515</td>\n",
       "      <td>0.1410</td>\n",
       "      <td>0.0775</td>\n",
       "      <td>0.120</td>\n",
       "      <td>9.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.150</td>\n",
       "      <td>0.7775</td>\n",
       "      <td>0.2370</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.330</td>\n",
       "      <td>21.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>0.545</td>\n",
       "      <td>0.425</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.7680</td>\n",
       "      <td>0.2940</td>\n",
       "      <td>0.1495</td>\n",
       "      <td>0.260</td>\n",
       "      <td>17.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>0.475</td>\n",
       "      <td>0.370</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.5095</td>\n",
       "      <td>0.2165</td>\n",
       "      <td>0.1125</td>\n",
       "      <td>0.165</td>\n",
       "      <td>10.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0.550</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.150</td>\n",
       "      <td>0.8945</td>\n",
       "      <td>0.3145</td>\n",
       "      <td>0.1510</td>\n",
       "      <td>0.320</td>\n",
       "      <td>20.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Sex  Length  Diameter  Height  Whole weight  Shucked weight  \\\n",
       "0    2   0.455     0.365   0.095        0.5140          0.2245   \n",
       "1    2   0.350     0.265   0.090        0.2255          0.0995   \n",
       "2    0   0.530     0.420   0.135        0.6770          0.2565   \n",
       "3    2   0.440     0.365   0.125        0.5160          0.2155   \n",
       "4    1   0.330     0.255   0.080        0.2050          0.0895   \n",
       "5    1   0.425     0.300   0.095        0.3515          0.1410   \n",
       "6    0   0.530     0.415   0.150        0.7775          0.2370   \n",
       "7    0   0.545     0.425   0.125        0.7680          0.2940   \n",
       "8    2   0.475     0.370   0.125        0.5095          0.2165   \n",
       "9    0   0.550     0.440   0.150        0.8945          0.3145   \n",
       "\n",
       "   Viscera weight  Shell weight   Age  \n",
       "0          0.1010         0.150  16.5  \n",
       "1          0.0485         0.070   8.5  \n",
       "2          0.1415         0.210  10.5  \n",
       "3          0.1140         0.155  11.5  \n",
       "4          0.0395         0.055   8.5  \n",
       "5          0.0775         0.120   9.5  \n",
       "6          0.1415         0.330  21.5  \n",
       "7          0.1495         0.260  17.5  \n",
       "8          0.1125         0.165  10.5  \n",
       "9          0.1510         0.320  20.5  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "le=LabelEncoder()\n",
    "data.Sex=le.fit_transform(data.Sex)\n",
    "data.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5e285a2",
   "metadata": {},
   "source": [
    "## Onehot Encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "165145f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Height</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "      <th>Shucked weight_0.001</th>\n",
       "      <th>Shucked weight_0.0025</th>\n",
       "      <th>...</th>\n",
       "      <th>Shucked weight_1.1705</th>\n",
       "      <th>Shucked weight_1.1945</th>\n",
       "      <th>Shucked weight_1.1965</th>\n",
       "      <th>Shucked weight_1.232</th>\n",
       "      <th>Shucked weight_1.2395</th>\n",
       "      <th>Shucked weight_1.2455</th>\n",
       "      <th>Shucked weight_1.253</th>\n",
       "      <th>Shucked weight_1.3485</th>\n",
       "      <th>Shucked weight_1.351</th>\n",
       "      <th>Shucked weight_1.488</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>0.455</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.5140</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.150</td>\n",
       "      <td>16.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.265</td>\n",
       "      <td>0.090</td>\n",
       "      <td>0.2255</td>\n",
       "      <td>0.0485</td>\n",
       "      <td>0.070</td>\n",
       "      <td>8.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.135</td>\n",
       "      <td>0.6770</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.210</td>\n",
       "      <td>10.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.5160</td>\n",
       "      <td>0.1140</td>\n",
       "      <td>0.155</td>\n",
       "      <td>11.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0.330</td>\n",
       "      <td>0.255</td>\n",
       "      <td>0.080</td>\n",
       "      <td>0.2050</td>\n",
       "      <td>0.0395</td>\n",
       "      <td>0.055</td>\n",
       "      <td>8.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>0.425</td>\n",
       "      <td>0.300</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.3515</td>\n",
       "      <td>0.0775</td>\n",
       "      <td>0.120</td>\n",
       "      <td>9.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.150</td>\n",
       "      <td>0.7775</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.330</td>\n",
       "      <td>21.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>0.545</td>\n",
       "      <td>0.425</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.7680</td>\n",
       "      <td>0.1495</td>\n",
       "      <td>0.260</td>\n",
       "      <td>17.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>0.475</td>\n",
       "      <td>0.370</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.5095</td>\n",
       "      <td>0.1125</td>\n",
       "      <td>0.165</td>\n",
       "      <td>10.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0.550</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.150</td>\n",
       "      <td>0.8945</td>\n",
       "      <td>0.1510</td>\n",
       "      <td>0.320</td>\n",
       "      <td>20.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>0.525</td>\n",
       "      <td>0.380</td>\n",
       "      <td>0.140</td>\n",
       "      <td>0.6065</td>\n",
       "      <td>0.1475</td>\n",
       "      <td>0.210</td>\n",
       "      <td>15.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>0.430</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.110</td>\n",
       "      <td>0.4060</td>\n",
       "      <td>0.0810</td>\n",
       "      <td>0.135</td>\n",
       "      <td>11.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2</td>\n",
       "      <td>0.490</td>\n",
       "      <td>0.380</td>\n",
       "      <td>0.135</td>\n",
       "      <td>0.5415</td>\n",
       "      <td>0.0950</td>\n",
       "      <td>0.190</td>\n",
       "      <td>12.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0</td>\n",
       "      <td>0.535</td>\n",
       "      <td>0.405</td>\n",
       "      <td>0.145</td>\n",
       "      <td>0.6845</td>\n",
       "      <td>0.1710</td>\n",
       "      <td>0.205</td>\n",
       "      <td>11.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0</td>\n",
       "      <td>0.470</td>\n",
       "      <td>0.355</td>\n",
       "      <td>0.100</td>\n",
       "      <td>0.4755</td>\n",
       "      <td>0.0805</td>\n",
       "      <td>0.185</td>\n",
       "      <td>11.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15 rows × 1523 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Sex  Length  Diameter  Height  Whole weight  Viscera weight  Shell weight  \\\n",
       "0     2   0.455     0.365   0.095        0.5140          0.1010         0.150   \n",
       "1     2   0.350     0.265   0.090        0.2255          0.0485         0.070   \n",
       "2     0   0.530     0.420   0.135        0.6770          0.1415         0.210   \n",
       "3     2   0.440     0.365   0.125        0.5160          0.1140         0.155   \n",
       "4     1   0.330     0.255   0.080        0.2050          0.0395         0.055   \n",
       "5     1   0.425     0.300   0.095        0.3515          0.0775         0.120   \n",
       "6     0   0.530     0.415   0.150        0.7775          0.1415         0.330   \n",
       "7     0   0.545     0.425   0.125        0.7680          0.1495         0.260   \n",
       "8     2   0.475     0.370   0.125        0.5095          0.1125         0.165   \n",
       "9     0   0.550     0.440   0.150        0.8945          0.1510         0.320   \n",
       "10    0   0.525     0.380   0.140        0.6065          0.1475         0.210   \n",
       "11    2   0.430     0.350   0.110        0.4060          0.0810         0.135   \n",
       "12    2   0.490     0.380   0.135        0.5415          0.0950         0.190   \n",
       "13    0   0.535     0.405   0.145        0.6845          0.1710         0.205   \n",
       "14    0   0.470     0.355   0.100        0.4755          0.0805         0.185   \n",
       "\n",
       "     Age  Shucked weight_0.001  Shucked weight_0.0025  ...  \\\n",
       "0   16.5                     0                      0  ...   \n",
       "1    8.5                     0                      0  ...   \n",
       "2   10.5                     0                      0  ...   \n",
       "3   11.5                     0                      0  ...   \n",
       "4    8.5                     0                      0  ...   \n",
       "5    9.5                     0                      0  ...   \n",
       "6   21.5                     0                      0  ...   \n",
       "7   17.5                     0                      0  ...   \n",
       "8   10.5                     0                      0  ...   \n",
       "9   20.5                     0                      0  ...   \n",
       "10  15.5                     0                      0  ...   \n",
       "11  11.5                     0                      0  ...   \n",
       "12  12.5                     0                      0  ...   \n",
       "13  11.5                     0                      0  ...   \n",
       "14  11.5                     0                      0  ...   \n",
       "\n",
       "    Shucked weight_1.1705  Shucked weight_1.1945  Shucked weight_1.1965  \\\n",
       "0                       0                      0                      0   \n",
       "1                       0                      0                      0   \n",
       "2                       0                      0                      0   \n",
       "3                       0                      0                      0   \n",
       "4                       0                      0                      0   \n",
       "5                       0                      0                      0   \n",
       "6                       0                      0                      0   \n",
       "7                       0                      0                      0   \n",
       "8                       0                      0                      0   \n",
       "9                       0                      0                      0   \n",
       "10                      0                      0                      0   \n",
       "11                      0                      0                      0   \n",
       "12                      0                      0                      0   \n",
       "13                      0                      0                      0   \n",
       "14                      0                      0                      0   \n",
       "\n",
       "    Shucked weight_1.232  Shucked weight_1.2395  Shucked weight_1.2455  \\\n",
       "0                      0                      0                      0   \n",
       "1                      0                      0                      0   \n",
       "2                      0                      0                      0   \n",
       "3                      0                      0                      0   \n",
       "4                      0                      0                      0   \n",
       "5                      0                      0                      0   \n",
       "6                      0                      0                      0   \n",
       "7                      0                      0                      0   \n",
       "8                      0                      0                      0   \n",
       "9                      0                      0                      0   \n",
       "10                     0                      0                      0   \n",
       "11                     0                      0                      0   \n",
       "12                     0                      0                      0   \n",
       "13                     0                      0                      0   \n",
       "14                     0                      0                      0   \n",
       "\n",
       "    Shucked weight_1.253  Shucked weight_1.3485  Shucked weight_1.351  \\\n",
       "0                      0                      0                     0   \n",
       "1                      0                      0                     0   \n",
       "2                      0                      0                     0   \n",
       "3                      0                      0                     0   \n",
       "4                      0                      0                     0   \n",
       "5                      0                      0                     0   \n",
       "6                      0                      0                     0   \n",
       "7                      0                      0                     0   \n",
       "8                      0                      0                     0   \n",
       "9                      0                      0                     0   \n",
       "10                     0                      0                     0   \n",
       "11                     0                      0                     0   \n",
       "12                     0                      0                     0   \n",
       "13                     0                      0                     0   \n",
       "14                     0                      0                     0   \n",
       "\n",
       "    Shucked weight_1.488  \n",
       "0                      0  \n",
       "1                      0  \n",
       "2                      0  \n",
       "3                      0  \n",
       "4                      0  \n",
       "5                      0  \n",
       "6                      0  \n",
       "7                      0  \n",
       "8                      0  \n",
       "9                      0  \n",
       "10                     0  \n",
       "11                     0  \n",
       "12                     0  \n",
       "13                     0  \n",
       "14                     0  \n",
       "\n",
       "[15 rows x 1523 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_main=pd.get_dummies(data,columns=['Shucked weight'])\n",
    "data_main.head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "bc6cbec8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Height</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "      <th>Shucked weight_0.001</th>\n",
       "      <th>Shucked weight_0.0025</th>\n",
       "      <th>...</th>\n",
       "      <th>Shucked weight_1.1705</th>\n",
       "      <th>Shucked weight_1.1945</th>\n",
       "      <th>Shucked weight_1.1965</th>\n",
       "      <th>Shucked weight_1.232</th>\n",
       "      <th>Shucked weight_1.2395</th>\n",
       "      <th>Shucked weight_1.2455</th>\n",
       "      <th>Shucked weight_1.253</th>\n",
       "      <th>Shucked weight_1.3485</th>\n",
       "      <th>Shucked weight_1.351</th>\n",
       "      <th>Shucked weight_1.488</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.036066</td>\n",
       "      <td>-0.035934</td>\n",
       "      <td>-0.042077</td>\n",
       "      <td>-0.021391</td>\n",
       "      <td>-0.032067</td>\n",
       "      <td>-0.034854</td>\n",
       "      <td>-0.034627</td>\n",
       "      <td>-0.000996</td>\n",
       "      <td>-0.000996</td>\n",
       "      <td>...</td>\n",
       "      <td>0.017826</td>\n",
       "      <td>0.017826</td>\n",
       "      <td>-0.019818</td>\n",
       "      <td>-0.019818</td>\n",
       "      <td>0.025213</td>\n",
       "      <td>0.017826</td>\n",
       "      <td>0.017826</td>\n",
       "      <td>0.017826</td>\n",
       "      <td>0.017826</td>\n",
       "      <td>-0.019818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Length</th>\n",
       "      <td>-0.036066</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.918828</td>\n",
       "      <td>0.827554</td>\n",
       "      <td>0.925261</td>\n",
       "      <td>0.903018</td>\n",
       "      <td>0.897706</td>\n",
       "      <td>0.556720</td>\n",
       "      <td>-0.057862</td>\n",
       "      <td>-0.053351</td>\n",
       "      <td>...</td>\n",
       "      <td>0.027193</td>\n",
       "      <td>0.032992</td>\n",
       "      <td>0.029770</td>\n",
       "      <td>0.029126</td>\n",
       "      <td>0.038005</td>\n",
       "      <td>0.023971</td>\n",
       "      <td>0.025904</td>\n",
       "      <td>0.032348</td>\n",
       "      <td>0.025904</td>\n",
       "      <td>0.032992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Diameter</th>\n",
       "      <td>-0.035934</td>\n",
       "      <td>0.918828</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.781610</td>\n",
       "      <td>0.910371</td>\n",
       "      <td>0.885061</td>\n",
       "      <td>0.888054</td>\n",
       "      <td>0.528001</td>\n",
       "      <td>0.002141</td>\n",
       "      <td>0.002141</td>\n",
       "      <td>...</td>\n",
       "      <td>0.026175</td>\n",
       "      <td>0.031147</td>\n",
       "      <td>0.035291</td>\n",
       "      <td>0.032805</td>\n",
       "      <td>0.037021</td>\n",
       "      <td>0.023688</td>\n",
       "      <td>0.026175</td>\n",
       "      <td>0.036120</td>\n",
       "      <td>0.027003</td>\n",
       "      <td>0.036120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Height</th>\n",
       "      <td>-0.042077</td>\n",
       "      <td>0.827554</td>\n",
       "      <td>0.781610</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.819221</td>\n",
       "      <td>0.798319</td>\n",
       "      <td>0.817338</td>\n",
       "      <td>0.557467</td>\n",
       "      <td>-0.047922</td>\n",
       "      <td>-0.040522</td>\n",
       "      <td>...</td>\n",
       "      <td>0.026080</td>\n",
       "      <td>0.026080</td>\n",
       "      <td>0.026080</td>\n",
       "      <td>0.035330</td>\n",
       "      <td>0.043428</td>\n",
       "      <td>0.013129</td>\n",
       "      <td>0.018679</td>\n",
       "      <td>0.040880</td>\n",
       "      <td>0.037180</td>\n",
       "      <td>0.027930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Whole weight</th>\n",
       "      <td>-0.021391</td>\n",
       "      <td>0.925261</td>\n",
       "      <td>0.910371</td>\n",
       "      <td>0.819221</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.966375</td>\n",
       "      <td>0.955355</td>\n",
       "      <td>0.540390</td>\n",
       "      <td>-0.026092</td>\n",
       "      <td>-0.025902</td>\n",
       "      <td>...</td>\n",
       "      <td>0.044397</td>\n",
       "      <td>0.054259</td>\n",
       "      <td>0.052902</td>\n",
       "      <td>0.053012</td>\n",
       "      <td>0.064858</td>\n",
       "      <td>0.041383</td>\n",
       "      <td>0.047395</td>\n",
       "      <td>0.061565</td>\n",
       "      <td>0.043592</td>\n",
       "      <td>0.057699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shucked weight_1.2455</th>\n",
       "      <td>0.017826</td>\n",
       "      <td>0.023971</td>\n",
       "      <td>0.023688</td>\n",
       "      <td>0.013129</td>\n",
       "      <td>0.041383</td>\n",
       "      <td>0.027095</td>\n",
       "      <td>0.021699</td>\n",
       "      <td>0.005118</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000339</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shucked weight_1.253</th>\n",
       "      <td>0.017826</td>\n",
       "      <td>0.025904</td>\n",
       "      <td>0.026175</td>\n",
       "      <td>0.018679</td>\n",
       "      <td>0.047395</td>\n",
       "      <td>0.050886</td>\n",
       "      <td>0.031260</td>\n",
       "      <td>-0.004482</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000339</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shucked weight_1.3485</th>\n",
       "      <td>0.017826</td>\n",
       "      <td>0.032348</td>\n",
       "      <td>0.036120</td>\n",
       "      <td>0.040880</td>\n",
       "      <td>0.061565</td>\n",
       "      <td>0.081807</td>\n",
       "      <td>0.037709</td>\n",
       "      <td>0.009919</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000339</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shucked weight_1.351</th>\n",
       "      <td>0.017826</td>\n",
       "      <td>0.025904</td>\n",
       "      <td>0.027003</td>\n",
       "      <td>0.037180</td>\n",
       "      <td>0.043592</td>\n",
       "      <td>0.032814</td>\n",
       "      <td>0.029203</td>\n",
       "      <td>0.014719</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000339</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shucked weight_1.488</th>\n",
       "      <td>-0.019818</td>\n",
       "      <td>0.032992</td>\n",
       "      <td>0.036120</td>\n",
       "      <td>0.027930</td>\n",
       "      <td>0.057699</td>\n",
       "      <td>0.044885</td>\n",
       "      <td>0.038598</td>\n",
       "      <td>0.005118</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000339</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>-0.000239</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1523 rows × 1523 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Sex    Length  Diameter    Height  Whole weight  \\\n",
       "Sex                    1.000000 -0.036066 -0.035934 -0.042077     -0.021391   \n",
       "Length                -0.036066  1.000000  0.918828  0.827554      0.925261   \n",
       "Diameter              -0.035934  0.918828  1.000000  0.781610      0.910371   \n",
       "Height                -0.042077  0.827554  0.781610  1.000000      0.819221   \n",
       "Whole weight          -0.021391  0.925261  0.910371  0.819221      1.000000   \n",
       "...                         ...       ...       ...       ...           ...   \n",
       "Shucked weight_1.2455  0.017826  0.023971  0.023688  0.013129      0.041383   \n",
       "Shucked weight_1.253   0.017826  0.025904  0.026175  0.018679      0.047395   \n",
       "Shucked weight_1.3485  0.017826  0.032348  0.036120  0.040880      0.061565   \n",
       "Shucked weight_1.351   0.017826  0.025904  0.027003  0.037180      0.043592   \n",
       "Shucked weight_1.488  -0.019818  0.032992  0.036120  0.027930      0.057699   \n",
       "\n",
       "                       Viscera weight  Shell weight       Age  \\\n",
       "Sex                         -0.032067     -0.034854 -0.034627   \n",
       "Length                       0.903018      0.897706  0.556720   \n",
       "Diameter                     0.885061      0.888054  0.528001   \n",
       "Height                       0.798319      0.817338  0.557467   \n",
       "Whole weight                 0.966375      0.955355  0.540390   \n",
       "...                               ...           ...       ...   \n",
       "Shucked weight_1.2455        0.027095      0.021699  0.005118   \n",
       "Shucked weight_1.253         0.050886      0.031260 -0.004482   \n",
       "Shucked weight_1.3485        0.081807      0.037709  0.009919   \n",
       "Shucked weight_1.351         0.032814      0.029203  0.014719   \n",
       "Shucked weight_1.488         0.044885      0.038598  0.005118   \n",
       "\n",
       "                       Shucked weight_0.001  Shucked weight_0.0025  ...  \\\n",
       "Sex                               -0.000996              -0.000996  ...   \n",
       "Length                            -0.057862              -0.053351  ...   \n",
       "Diameter                           0.002141               0.002141  ...   \n",
       "Height                            -0.047922              -0.040522  ...   \n",
       "Whole weight                      -0.026092              -0.025902  ...   \n",
       "...                                     ...                    ...  ...   \n",
       "Shucked weight_1.2455             -0.000239              -0.000239  ...   \n",
       "Shucked weight_1.253              -0.000239              -0.000239  ...   \n",
       "Shucked weight_1.3485             -0.000239              -0.000239  ...   \n",
       "Shucked weight_1.351              -0.000239              -0.000239  ...   \n",
       "Shucked weight_1.488              -0.000239              -0.000239  ...   \n",
       "\n",
       "                       Shucked weight_1.1705  Shucked weight_1.1945  \\\n",
       "Sex                                 0.017826               0.017826   \n",
       "Length                              0.027193               0.032992   \n",
       "Diameter                            0.026175               0.031147   \n",
       "Height                              0.026080               0.026080   \n",
       "Whole weight                        0.044397               0.054259   \n",
       "...                                      ...                    ...   \n",
       "Shucked weight_1.2455              -0.000239              -0.000239   \n",
       "Shucked weight_1.253               -0.000239              -0.000239   \n",
       "Shucked weight_1.3485              -0.000239              -0.000239   \n",
       "Shucked weight_1.351               -0.000239              -0.000239   \n",
       "Shucked weight_1.488               -0.000239              -0.000239   \n",
       "\n",
       "                       Shucked weight_1.1965  Shucked weight_1.232  \\\n",
       "Sex                                -0.019818             -0.019818   \n",
       "Length                              0.029770              0.029126   \n",
       "Diameter                            0.035291              0.032805   \n",
       "Height                              0.026080              0.035330   \n",
       "Whole weight                        0.052902              0.053012   \n",
       "...                                      ...                   ...   \n",
       "Shucked weight_1.2455              -0.000239             -0.000239   \n",
       "Shucked weight_1.253               -0.000239             -0.000239   \n",
       "Shucked weight_1.3485              -0.000239             -0.000239   \n",
       "Shucked weight_1.351               -0.000239             -0.000239   \n",
       "Shucked weight_1.488               -0.000239             -0.000239   \n",
       "\n",
       "                       Shucked weight_1.2395  Shucked weight_1.2455  \\\n",
       "Sex                                 0.025213               0.017826   \n",
       "Length                              0.038005               0.023971   \n",
       "Diameter                            0.037021               0.023688   \n",
       "Height                              0.043428               0.013129   \n",
       "Whole weight                        0.064858               0.041383   \n",
       "...                                      ...                    ...   \n",
       "Shucked weight_1.2455              -0.000339               1.000000   \n",
       "Shucked weight_1.253               -0.000339              -0.000239   \n",
       "Shucked weight_1.3485              -0.000339              -0.000239   \n",
       "Shucked weight_1.351               -0.000339              -0.000239   \n",
       "Shucked weight_1.488               -0.000339              -0.000239   \n",
       "\n",
       "                       Shucked weight_1.253  Shucked weight_1.3485  \\\n",
       "Sex                                0.017826               0.017826   \n",
       "Length                             0.025904               0.032348   \n",
       "Diameter                           0.026175               0.036120   \n",
       "Height                             0.018679               0.040880   \n",
       "Whole weight                       0.047395               0.061565   \n",
       "...                                     ...                    ...   \n",
       "Shucked weight_1.2455             -0.000239              -0.000239   \n",
       "Shucked weight_1.253               1.000000              -0.000239   \n",
       "Shucked weight_1.3485             -0.000239               1.000000   \n",
       "Shucked weight_1.351              -0.000239              -0.000239   \n",
       "Shucked weight_1.488              -0.000239              -0.000239   \n",
       "\n",
       "                       Shucked weight_1.351  Shucked weight_1.488  \n",
       "Sex                                0.017826             -0.019818  \n",
       "Length                             0.025904              0.032992  \n",
       "Diameter                           0.027003              0.036120  \n",
       "Height                             0.037180              0.027930  \n",
       "Whole weight                       0.043592              0.057699  \n",
       "...                                     ...                   ...  \n",
       "Shucked weight_1.2455             -0.000239             -0.000239  \n",
       "Shucked weight_1.253              -0.000239             -0.000239  \n",
       "Shucked weight_1.3485             -0.000239             -0.000239  \n",
       "Shucked weight_1.351               1.000000             -0.000239  \n",
       "Shucked weight_1.488              -0.000239              1.000000  \n",
       "\n",
       "[1523 rows x 1523 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_main.corr()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a48338f4",
   "metadata": {},
   "source": [
    "## Splitting of data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "ef375933",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0       16.5\n",
      "1        8.5\n",
      "2       10.5\n",
      "3       11.5\n",
      "4        8.5\n",
      "        ... \n",
      "4172    12.5\n",
      "4173    11.5\n",
      "4174    10.5\n",
      "4175    11.5\n",
      "4176    13.5\n",
      "Name: Age, Length: 4177, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "y=data_main['Age']\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "a6c0f2bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "      <th>Shucked weight_0.001</th>\n",
       "      <th>Shucked weight_0.0025</th>\n",
       "      <th>Shucked weight_0.0045</th>\n",
       "      <th>...</th>\n",
       "      <th>Shucked weight_1.1705</th>\n",
       "      <th>Shucked weight_1.1945</th>\n",
       "      <th>Shucked weight_1.1965</th>\n",
       "      <th>Shucked weight_1.232</th>\n",
       "      <th>Shucked weight_1.2395</th>\n",
       "      <th>Shucked weight_1.2455</th>\n",
       "      <th>Shucked weight_1.253</th>\n",
       "      <th>Shucked weight_1.3485</th>\n",
       "      <th>Shucked weight_1.351</th>\n",
       "      <th>Shucked weight_1.488</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>0.455</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.5140</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.150</td>\n",
       "      <td>16.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.265</td>\n",
       "      <td>0.2255</td>\n",
       "      <td>0.0485</td>\n",
       "      <td>0.070</td>\n",
       "      <td>8.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.6770</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.210</td>\n",
       "      <td>10.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.5160</td>\n",
       "      <td>0.1140</td>\n",
       "      <td>0.155</td>\n",
       "      <td>11.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0.330</td>\n",
       "      <td>0.255</td>\n",
       "      <td>0.2050</td>\n",
       "      <td>0.0395</td>\n",
       "      <td>0.055</td>\n",
       "      <td>8.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>0.425</td>\n",
       "      <td>0.300</td>\n",
       "      <td>0.3515</td>\n",
       "      <td>0.0775</td>\n",
       "      <td>0.120</td>\n",
       "      <td>9.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.415</td>\n",
       "      <td>0.7775</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.330</td>\n",
       "      <td>21.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>0.545</td>\n",
       "      <td>0.425</td>\n",
       "      <td>0.7680</td>\n",
       "      <td>0.1495</td>\n",
       "      <td>0.260</td>\n",
       "      <td>17.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>0.475</td>\n",
       "      <td>0.370</td>\n",
       "      <td>0.5095</td>\n",
       "      <td>0.1125</td>\n",
       "      <td>0.165</td>\n",
       "      <td>10.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0.550</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.8945</td>\n",
       "      <td>0.1510</td>\n",
       "      <td>0.320</td>\n",
       "      <td>20.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 1522 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Sex  Length  Diameter  Whole weight  Viscera weight  Shell weight   Age  \\\n",
       "0    2   0.455     0.365        0.5140          0.1010         0.150  16.5   \n",
       "1    2   0.350     0.265        0.2255          0.0485         0.070   8.5   \n",
       "2    0   0.530     0.420        0.6770          0.1415         0.210  10.5   \n",
       "3    2   0.440     0.365        0.5160          0.1140         0.155  11.5   \n",
       "4    1   0.330     0.255        0.2050          0.0395         0.055   8.5   \n",
       "5    1   0.425     0.300        0.3515          0.0775         0.120   9.5   \n",
       "6    0   0.530     0.415        0.7775          0.1415         0.330  21.5   \n",
       "7    0   0.545     0.425        0.7680          0.1495         0.260  17.5   \n",
       "8    2   0.475     0.370        0.5095          0.1125         0.165  10.5   \n",
       "9    0   0.550     0.440        0.8945          0.1510         0.320  20.5   \n",
       "\n",
       "   Shucked weight_0.001  Shucked weight_0.0025  Shucked weight_0.0045  ...  \\\n",
       "0                     0                      0                      0  ...   \n",
       "1                     0                      0                      0  ...   \n",
       "2                     0                      0                      0  ...   \n",
       "3                     0                      0                      0  ...   \n",
       "4                     0                      0                      0  ...   \n",
       "5                     0                      0                      0  ...   \n",
       "6                     0                      0                      0  ...   \n",
       "7                     0                      0                      0  ...   \n",
       "8                     0                      0                      0  ...   \n",
       "9                     0                      0                      0  ...   \n",
       "\n",
       "   Shucked weight_1.1705  Shucked weight_1.1945  Shucked weight_1.1965  \\\n",
       "0                      0                      0                      0   \n",
       "1                      0                      0                      0   \n",
       "2                      0                      0                      0   \n",
       "3                      0                      0                      0   \n",
       "4                      0                      0                      0   \n",
       "5                      0                      0                      0   \n",
       "6                      0                      0                      0   \n",
       "7                      0                      0                      0   \n",
       "8                      0                      0                      0   \n",
       "9                      0                      0                      0   \n",
       "\n",
       "   Shucked weight_1.232  Shucked weight_1.2395  Shucked weight_1.2455  \\\n",
       "0                     0                      0                      0   \n",
       "1                     0                      0                      0   \n",
       "2                     0                      0                      0   \n",
       "3                     0                      0                      0   \n",
       "4                     0                      0                      0   \n",
       "5                     0                      0                      0   \n",
       "6                     0                      0                      0   \n",
       "7                     0                      0                      0   \n",
       "8                     0                      0                      0   \n",
       "9                     0                      0                      0   \n",
       "\n",
       "   Shucked weight_1.253  Shucked weight_1.3485  Shucked weight_1.351  \\\n",
       "0                     0                      0                     0   \n",
       "1                     0                      0                     0   \n",
       "2                     0                      0                     0   \n",
       "3                     0                      0                     0   \n",
       "4                     0                      0                     0   \n",
       "5                     0                      0                     0   \n",
       "6                     0                      0                     0   \n",
       "7                     0                      0                     0   \n",
       "8                     0                      0                     0   \n",
       "9                     0                      0                     0   \n",
       "\n",
       "   Shucked weight_1.488  \n",
       "0                     0  \n",
       "1                     0  \n",
       "2                     0  \n",
       "3                     0  \n",
       "4                     0  \n",
       "5                     0  \n",
       "6                     0  \n",
       "7                     0  \n",
       "8                     0  \n",
       "9                     0  \n",
       "\n",
       "[10 rows x 1522 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X=data_main.drop(columns=['Height'],axis=1)\n",
    "X.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ec966c3",
   "metadata": {},
   "source": [
    "## Scalling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "a56862f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import scale\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "b72a16d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "      <th>Shucked weight_0.001</th>\n",
       "      <th>Shucked weight_0.0025</th>\n",
       "      <th>Shucked weight_0.0045</th>\n",
       "      <th>...</th>\n",
       "      <th>Shucked weight_1.1705</th>\n",
       "      <th>Shucked weight_1.1945</th>\n",
       "      <th>Shucked weight_1.1965</th>\n",
       "      <th>Shucked weight_1.232</th>\n",
       "      <th>Shucked weight_1.2395</th>\n",
       "      <th>Shucked weight_1.2455</th>\n",
       "      <th>Shucked weight_1.253</th>\n",
       "      <th>Shucked weight_1.3485</th>\n",
       "      <th>Shucked weight_1.351</th>\n",
       "      <th>Shucked weight_1.488</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.151980</td>\n",
       "      <td>-0.574558</td>\n",
       "      <td>-0.504337</td>\n",
       "      <td>-0.641898</td>\n",
       "      <td>-0.726212</td>\n",
       "      <td>-0.638217</td>\n",
       "      <td>1.571544</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.151980</td>\n",
       "      <td>-1.448986</td>\n",
       "      <td>-1.575453</td>\n",
       "      <td>-1.230277</td>\n",
       "      <td>-1.205221</td>\n",
       "      <td>-1.212987</td>\n",
       "      <td>-0.910013</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-1.280690</td>\n",
       "      <td>0.050033</td>\n",
       "      <td>0.084776</td>\n",
       "      <td>-0.309469</td>\n",
       "      <td>-0.356690</td>\n",
       "      <td>-0.207139</td>\n",
       "      <td>-0.289624</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.151980</td>\n",
       "      <td>-0.699476</td>\n",
       "      <td>-0.504337</td>\n",
       "      <td>-0.637819</td>\n",
       "      <td>-0.607600</td>\n",
       "      <td>-0.602294</td>\n",
       "      <td>0.020571</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.064355</td>\n",
       "      <td>-1.615544</td>\n",
       "      <td>-1.682564</td>\n",
       "      <td>-1.272086</td>\n",
       "      <td>-1.287337</td>\n",
       "      <td>-1.320757</td>\n",
       "      <td>-0.910013</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1522 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Sex    Length  Diameter  Whole weight  Viscera weight  Shell weight  \\\n",
       "0  1.151980 -0.574558 -0.504337     -0.641898       -0.726212     -0.638217   \n",
       "1  1.151980 -1.448986 -1.575453     -1.230277       -1.205221     -1.212987   \n",
       "2 -1.280690  0.050033  0.084776     -0.309469       -0.356690     -0.207139   \n",
       "3  1.151980 -0.699476 -0.504337     -0.637819       -0.607600     -0.602294   \n",
       "4 -0.064355 -1.615544 -1.682564     -1.272086       -1.287337     -1.320757   \n",
       "\n",
       "        Age  Shucked weight_0.001  Shucked weight_0.0025  \\\n",
       "0  1.571544             -0.015475              -0.015475   \n",
       "1 -0.910013             -0.015475              -0.015475   \n",
       "2 -0.289624             -0.015475              -0.015475   \n",
       "3  0.020571             -0.015475              -0.015475   \n",
       "4 -0.910013             -0.015475              -0.015475   \n",
       "\n",
       "   Shucked weight_0.0045  ...  Shucked weight_1.1705  Shucked weight_1.1945  \\\n",
       "0              -0.021887  ...              -0.015475              -0.015475   \n",
       "1              -0.021887  ...              -0.015475              -0.015475   \n",
       "2              -0.021887  ...              -0.015475              -0.015475   \n",
       "3              -0.021887  ...              -0.015475              -0.015475   \n",
       "4              -0.021887  ...              -0.015475              -0.015475   \n",
       "\n",
       "   Shucked weight_1.1965  Shucked weight_1.232  Shucked weight_1.2395  \\\n",
       "0              -0.015475             -0.015475              -0.021887   \n",
       "1              -0.015475             -0.015475              -0.021887   \n",
       "2              -0.015475             -0.015475              -0.021887   \n",
       "3              -0.015475             -0.015475              -0.021887   \n",
       "4              -0.015475             -0.015475              -0.021887   \n",
       "\n",
       "   Shucked weight_1.2455  Shucked weight_1.253  Shucked weight_1.3485  \\\n",
       "0              -0.015475             -0.015475              -0.015475   \n",
       "1              -0.015475             -0.015475              -0.015475   \n",
       "2              -0.015475             -0.015475              -0.015475   \n",
       "3              -0.015475             -0.015475              -0.015475   \n",
       "4              -0.015475             -0.015475              -0.015475   \n",
       "\n",
       "   Shucked weight_1.351  Shucked weight_1.488  \n",
       "0             -0.015475             -0.015475  \n",
       "1             -0.015475             -0.015475  \n",
       "2             -0.015475             -0.015475  \n",
       "3             -0.015475             -0.015475  \n",
       "4             -0.015475             -0.015475  \n",
       "\n",
       "[5 rows x 1522 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_scaled=pd.DataFrame(scale(X),columns=X.columns)\n",
    "x_scaled.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f74c347",
   "metadata": {},
   "source": [
    "## Training data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "0524980d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train,X_test,y_train,y_test = train_test_split(x_scaled,y,test_size=0.3,random_state=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "edaa4c6c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2923, 1522)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "ad4021c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2923,)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "015ef117",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1254, 1522)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "35c1c9ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1254,)"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fcf35180",
   "metadata": {},
   "source": [
    "## Model Building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "571969df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "mr = LinearRegression()\n",
    "mr.fit(X_train,y_train)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c098bb2f",
   "metadata": {},
   "source": [
    "## Test the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "b605622a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "      <th>Shucked weight_0.001</th>\n",
       "      <th>Shucked weight_0.0025</th>\n",
       "      <th>Shucked weight_0.0045</th>\n",
       "      <th>...</th>\n",
       "      <th>Shucked weight_1.1705</th>\n",
       "      <th>Shucked weight_1.1945</th>\n",
       "      <th>Shucked weight_1.1965</th>\n",
       "      <th>Shucked weight_1.232</th>\n",
       "      <th>Shucked weight_1.2395</th>\n",
       "      <th>Shucked weight_1.2455</th>\n",
       "      <th>Shucked weight_1.253</th>\n",
       "      <th>Shucked weight_1.3485</th>\n",
       "      <th>Shucked weight_1.351</th>\n",
       "      <th>Shucked weight_1.488</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>668</th>\n",
       "      <td>1.151980</td>\n",
       "      <td>0.216591</td>\n",
       "      <td>0.138332</td>\n",
       "      <td>0.181016</td>\n",
       "      <td>0.569396</td>\n",
       "      <td>0.690940</td>\n",
       "      <td>0.951154</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1580</th>\n",
       "      <td>-0.064355</td>\n",
       "      <td>-0.199803</td>\n",
       "      <td>-0.129447</td>\n",
       "      <td>-0.433875</td>\n",
       "      <td>-0.343004</td>\n",
       "      <td>-0.325685</td>\n",
       "      <td>-0.599818</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3784</th>\n",
       "      <td>1.151980</td>\n",
       "      <td>0.799543</td>\n",
       "      <td>0.727446</td>\n",
       "      <td>0.870348</td>\n",
       "      <td>1.764639</td>\n",
       "      <td>0.565209</td>\n",
       "      <td>0.330765</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>463</th>\n",
       "      <td>-0.064355</td>\n",
       "      <td>-2.531611</td>\n",
       "      <td>-2.646568</td>\n",
       "      <td>-1.579022</td>\n",
       "      <td>-1.538247</td>\n",
       "      <td>-1.572219</td>\n",
       "      <td>-1.530402</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2615</th>\n",
       "      <td>1.151980</td>\n",
       "      <td>1.007740</td>\n",
       "      <td>0.941669</td>\n",
       "      <td>1.390405</td>\n",
       "      <td>1.778325</td>\n",
       "      <td>0.996287</td>\n",
       "      <td>0.640960</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1052</th>\n",
       "      <td>1.151980</td>\n",
       "      <td>2.007086</td>\n",
       "      <td>2.012784</td>\n",
       "      <td>3.004623</td>\n",
       "      <td>2.996378</td>\n",
       "      <td>2.742152</td>\n",
       "      <td>0.640960</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3439</th>\n",
       "      <td>-0.064355</td>\n",
       "      <td>-0.699476</td>\n",
       "      <td>-0.665004</td>\n",
       "      <td>-0.760186</td>\n",
       "      <td>-0.776394</td>\n",
       "      <td>-0.774725</td>\n",
       "      <td>-0.599818</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1174</th>\n",
       "      <td>-1.280690</td>\n",
       "      <td>0.924461</td>\n",
       "      <td>0.888113</td>\n",
       "      <td>0.668443</td>\n",
       "      <td>1.162455</td>\n",
       "      <td>0.356854</td>\n",
       "      <td>-0.289624</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2210</th>\n",
       "      <td>1.151980</td>\n",
       "      <td>1.132658</td>\n",
       "      <td>0.995224</td>\n",
       "      <td>1.635138</td>\n",
       "      <td>1.062091</td>\n",
       "      <td>2.666713</td>\n",
       "      <td>2.502127</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2408</th>\n",
       "      <td>-0.064355</td>\n",
       "      <td>0.799543</td>\n",
       "      <td>0.781001</td>\n",
       "      <td>0.773474</td>\n",
       "      <td>1.130521</td>\n",
       "      <td>0.655017</td>\n",
       "      <td>1.571544</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.021887</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "      <td>-0.015475</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1254 rows × 1522 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Sex    Length  Diameter  Whole weight  Viscera weight  \\\n",
       "668   1.151980  0.216591  0.138332      0.181016        0.569396   \n",
       "1580 -0.064355 -0.199803 -0.129447     -0.433875       -0.343004   \n",
       "3784  1.151980  0.799543  0.727446      0.870348        1.764639   \n",
       "463  -0.064355 -2.531611 -2.646568     -1.579022       -1.538247   \n",
       "2615  1.151980  1.007740  0.941669      1.390405        1.778325   \n",
       "...        ...       ...       ...           ...             ...   \n",
       "1052  1.151980  2.007086  2.012784      3.004623        2.996378   \n",
       "3439 -0.064355 -0.699476 -0.665004     -0.760186       -0.776394   \n",
       "1174 -1.280690  0.924461  0.888113      0.668443        1.162455   \n",
       "2210  1.151980  1.132658  0.995224      1.635138        1.062091   \n",
       "2408 -0.064355  0.799543  0.781001      0.773474        1.130521   \n",
       "\n",
       "      Shell weight       Age  Shucked weight_0.001  Shucked weight_0.0025  \\\n",
       "668       0.690940  0.951154             -0.015475              -0.015475   \n",
       "1580     -0.325685 -0.599818             -0.015475              -0.015475   \n",
       "3784      0.565209  0.330765             -0.015475              -0.015475   \n",
       "463      -1.572219 -1.530402             -0.015475              -0.015475   \n",
       "2615      0.996287  0.640960             -0.015475              -0.015475   \n",
       "...            ...       ...                   ...                    ...   \n",
       "1052      2.742152  0.640960             -0.015475              -0.015475   \n",
       "3439     -0.774725 -0.599818             -0.015475              -0.015475   \n",
       "1174      0.356854 -0.289624             -0.015475              -0.015475   \n",
       "2210      2.666713  2.502127             -0.015475              -0.015475   \n",
       "2408      0.655017  1.571544             -0.015475              -0.015475   \n",
       "\n",
       "      Shucked weight_0.0045  ...  Shucked weight_1.1705  \\\n",
       "668               -0.021887  ...              -0.015475   \n",
       "1580              -0.021887  ...              -0.015475   \n",
       "3784              -0.021887  ...              -0.015475   \n",
       "463               -0.021887  ...              -0.015475   \n",
       "2615              -0.021887  ...              -0.015475   \n",
       "...                     ...  ...                    ...   \n",
       "1052              -0.021887  ...              -0.015475   \n",
       "3439              -0.021887  ...              -0.015475   \n",
       "1174              -0.021887  ...              -0.015475   \n",
       "2210              -0.021887  ...              -0.015475   \n",
       "2408              -0.021887  ...              -0.015475   \n",
       "\n",
       "      Shucked weight_1.1945  Shucked weight_1.1965  Shucked weight_1.232  \\\n",
       "668               -0.015475              -0.015475             -0.015475   \n",
       "1580              -0.015475              -0.015475             -0.015475   \n",
       "3784              -0.015475              -0.015475             -0.015475   \n",
       "463               -0.015475              -0.015475             -0.015475   \n",
       "2615              -0.015475              -0.015475             -0.015475   \n",
       "...                     ...                    ...                   ...   \n",
       "1052              -0.015475              -0.015475             -0.015475   \n",
       "3439              -0.015475              -0.015475             -0.015475   \n",
       "1174              -0.015475              -0.015475             -0.015475   \n",
       "2210              -0.015475              -0.015475             -0.015475   \n",
       "2408              -0.015475              -0.015475             -0.015475   \n",
       "\n",
       "      Shucked weight_1.2395  Shucked weight_1.2455  Shucked weight_1.253  \\\n",
       "668               -0.021887              -0.015475             -0.015475   \n",
       "1580              -0.021887              -0.015475             -0.015475   \n",
       "3784              -0.021887              -0.015475             -0.015475   \n",
       "463               -0.021887              -0.015475             -0.015475   \n",
       "2615              -0.021887              -0.015475             -0.015475   \n",
       "...                     ...                    ...                   ...   \n",
       "1052              -0.021887              -0.015475             -0.015475   \n",
       "3439              -0.021887              -0.015475             -0.015475   \n",
       "1174              -0.021887              -0.015475             -0.015475   \n",
       "2210              -0.021887              -0.015475             -0.015475   \n",
       "2408              -0.021887              -0.015475             -0.015475   \n",
       "\n",
       "      Shucked weight_1.3485  Shucked weight_1.351  Shucked weight_1.488  \n",
       "668               -0.015475             -0.015475             -0.015475  \n",
       "1580              -0.015475             -0.015475             -0.015475  \n",
       "3784              -0.015475             -0.015475             -0.015475  \n",
       "463               -0.015475             -0.015475             -0.015475  \n",
       "2615              -0.015475             -0.015475             -0.015475  \n",
       "...                     ...                   ...                   ...  \n",
       "1052              -0.015475             -0.015475             -0.015475  \n",
       "3439              -0.015475             -0.015475             -0.015475  \n",
       "1174              -0.015475             -0.015475             -0.015475  \n",
       "2210              -0.015475             -0.015475             -0.015475  \n",
       "2408              -0.015475             -0.015475             -0.015475  \n",
       "\n",
       "[1254 rows x 1522 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "43150a39",
   "metadata": {},
   "outputs": [],
   "source": [
    "pred = mr.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "d560991e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([14.5       ,  9.5       , 16.17341116, ..., 10.5       ,\n",
       "       19.5       , 16.5       ])"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "2f357e11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "668     14.5\n",
       "1580     9.5\n",
       "3784    12.5\n",
       "463      6.5\n",
       "2615    13.5\n",
       "        ... \n",
       "1052    13.5\n",
       "3439     9.5\n",
       "1174    10.5\n",
       "2210    19.5\n",
       "2408    16.5\n",
       "Name: Age, Length: 1254, dtype: float64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d371dca",
   "metadata": {},
   "source": [
    "## Evaluation "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "74be196d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sex</th>\n",
       "      <th>Length</th>\n",
       "      <th>Diameter</th>\n",
       "      <th>Height</th>\n",
       "      <th>Whole weight</th>\n",
       "      <th>Shucked weight</th>\n",
       "      <th>Viscera weight</th>\n",
       "      <th>Shell weight</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>0.455</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.095</td>\n",
       "      <td>0.5140</td>\n",
       "      <td>0.2245</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.150</td>\n",
       "      <td>16.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.265</td>\n",
       "      <td>0.090</td>\n",
       "      <td>0.2255</td>\n",
       "      <td>0.0995</td>\n",
       "      <td>0.0485</td>\n",
       "      <td>0.070</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0.530</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.135</td>\n",
       "      <td>0.6770</td>\n",
       "      <td>0.2565</td>\n",
       "      <td>0.1415</td>\n",
       "      <td>0.210</td>\n",
       "      <td>10.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.125</td>\n",
       "      <td>0.5160</td>\n",
       "      <td>0.2155</td>\n",
       "      <td>0.1140</td>\n",
       "      <td>0.155</td>\n",
       "      <td>11.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0.330</td>\n",
       "      <td>0.255</td>\n",
       "      <td>0.080</td>\n",
       "      <td>0.2050</td>\n",
       "      <td>0.0895</td>\n",
       "      <td>0.0395</td>\n",
       "      <td>0.055</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Sex  Length  Diameter  Height  Whole weight  Shucked weight  \\\n",
       "0    2   0.455     0.365   0.095        0.5140          0.2245   \n",
       "1    2   0.350     0.265   0.090        0.2255          0.0995   \n",
       "2    0   0.530     0.420   0.135        0.6770          0.2565   \n",
       "3    2   0.440     0.365   0.125        0.5160          0.2155   \n",
       "4    1   0.330     0.255   0.080        0.2050          0.0895   \n",
       "\n",
       "   Viscera weight  Shell weight   Age  \n",
       "0          0.1010         0.150  16.5  \n",
       "1          0.0485         0.070   8.5  \n",
       "2          0.1415         0.210  10.5  \n",
       "3          0.1140         0.155  11.5  \n",
       "4          0.0395         0.055   8.5  "
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "0e41ee2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import r2_score\n",
    "score = r2_score(pred,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "0b8500c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7086882165521637"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "52463671",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
